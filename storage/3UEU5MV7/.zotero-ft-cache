Cross-sectional Structural Analysis for 3D Printing Optimization
Nobuyuki Umetani∗ , Ryan Schmidt† Autodesk Research

Abstract
We propose a novel cross-sectional structural analysis technique that efﬁciently detects critical stress inside a 3D object. We slice the object into cross-sections and compute stress based on bending momentum equilibrium. Unlike traditional approaches based on ﬁnite element methods, our method does not require a volumetric mesh or solution of linear systems, enabling interactive analysis speed. Based on the stress analysis, the orientation of an object is optimized to increase mechanical strength when manufactured with 3D printing. CR Categories: I.3.5 [Computer Graphics]: Computational Geometry and Object Modeling—Physically based modeling; Keywords: structural analysis, optimization, 3D printing
max weakness

|T|=10k t = 0.13sec

min weakness

optimal printing direction

(a)
pulling right fore leg

(b)
pulling right fore leg

broke at 0.4kgf

broke at 3.7kgf

(c)

(d)

1

Introduction

Democratized digital manufacturing devices such as desktop 3D printers enable non-professionals to casually create physical objects. Various software packages such as MeshMixer [Schmidt and Singh 2010] and Autodesk 123D [2010] provide end-users with intuitive 3D modeling interfaces for 3D printing. However, novice users often create structurally-unsound shapes which can easily break. Analyzing structural weakness is a signiﬁcant challenge. Even simple rules-of-thumb may involve considering a large number of possible force location/magnitude combinations, and it is hard to estimate the effect of such forces on complex 3D shapes. Umetani et al. [2012] showed that interactive analysis signiﬁcantly helps novice users for plank-based furniture design. Our goal is to apply a similar concept for free-form 3D objects. Traditionally, structural validity of 3D objects was evaluated using the Finite Element Method (FEM). However, FEM involves time-consuming 3D mesh generation and the solution of large linear systems. As a result, FEM is generally not integrated into the real-time visualizations of interactive tools, making it difﬁcult for users to consider structural robustness during incremental trial-and-error design. To achieve fast shape validation, we propose cross-sectional structural analysis. We compute a number of cross sections of an object and compute forces on the cross sections. We extend the wellknown Euler-Bernoulli assumption [Timoshenko 1970] to greatly reduce the complexity of the problem. The advantage of this assumption is that it focuses purely on the geometric relationship between a cross section and external load, ignoring deformation outside the cross section. Based on this simpliﬁcation, we can ﬁnd the weak parts of a 3D object at interactive rates.
∗ e-mail:n.umetani@gmail.com † e-mail:ryan.schmidt@autodesk.com

Figure 1: (a) our system visualizes structural weakness at interactive rates during mesh editing. (b) A computed optimal printing direction. (c) A na¨ve printed model easily fractures under external ı force, while (d) the optimized print bears much larger forces. Our manufacturing target is 3D printing with the Fused Deposition Method (FDM). In this process, objects are constructed in layers, with each layer composed of a thin ﬁlament of melted plastic [Gibson et al. 2009]. This layer-by-layer construction introduces significant structural anisotropy – in particular, vertical bonding between layers is much weaker than the in-layer bonds. In this paper, we optimize the orientation of models for 3D printing to maximize their mechanical strength, based on our novel cross-sectional structural analysis.

2

Related Work

FEM has been applied for structural weakness detection to ﬁnd the worst loading scenario [Zhou et al. 2013], to strengthen [Stava et al. 2012] and to partition [Luo et al. 2012] an input 3D object. We analyze structural weakness to optimize printing direction using novel cross-sectional structural analysis. Make It Stand [Pr´ vost et al. 2013] deforms objects so that they e stand upright without toppling by optimizing momentum equilibrium under gravity. We similarly consider momentum equilibrium, but on cross sections under many different external forces. Structural soundness has also been studied in graphics for masonry design (e.g. [Panozzo et al. 2013]). Whiting et al. [2012] propose a structural soundness evaluation function which considers bending force between bricks. In the same spirit, we consider bending force on cross sections to analyze structural soundness.

3

Method

Objects manufactured via layer-by-layer 3D printing techniques such as FDM exhibit signiﬁcant anisotropy; they can bear considerable tensile force in the direction of ﬁlament strands, while being rather fragile when forces perpendicular to the ﬁlament strands are applied. Because FDM accumulates layers in a certain printing direction Θ ∈ R3 , the printed object will fracFracture criteria.

real-time session stress analysis on cross sections slicing clustering sampling multiple directions clustered cross sections detected weak cross sections optimized printing direction (shown with red arrow)

input shape

layers of cross sections

Figure 2: Overview of our algorithm. ture much more easily in this direction. Within a layer, ﬁlament is usually oriented in many directions, so fracturing perpendicular to Θ is signiﬁcantly less likely. We denote σL as the maximum tenˆ sile stress under which a layer of ﬁlament separates. We conducted a simple experiment to break a cantilever beam and measured the value σL as 60MPa. ˆ An overview of our algorithm is shown in Fig. 2. In detecting possible breaking scenarios, we ﬁrst assume that an object is uniformly ﬁlled with an isotropic material which can bear maximum tensile stress σL . Next, we ﬁnd a set of cross sections for which external ˆ forces can produce a stress that exceeds σL inside that cross section. ˆ Then, we determine a printing direction Θ such that the normal of the weakest cross sections are as perpendicular to Θ as possible. to occur, and hence we can still use this assumption for general 3D shapes for the purpose of critical stress detection.
Virtual cross-section. To implement the EB assumption on 3D objects, we ﬁrst x Π’ need to construct a cross section and neug’ tral axis (Ω, z) such that z is perpendicz ular to Ω and passes through the centroid g y n of Ω. Although the medial axis [Miklos Π Ω et al. 2010] can be used to ﬁnd candidates, ∆n the medial axis is costly to generate. Instead we introduce a fast virtual cross section technique to approximately generate (Ω, z). First, take an arbitrary cross section of the 3D object Γ which has a normal direction n ∈ R3 . We consider another section Γ at a small distance ∆n that has the same normal direction n. For sections Γ and Γ , we compute the centroids g and g . Next, we compute a neutral axis direction Γ as z = (g − g)/|g − g| with inﬁnitesimally-small distance ∆n → 0. Finally, we get a virtual cross-section Ω by projecting Γ perpendicular to z so that the centroid of Ω remains g.

3.1

Cross-sectional Structural Analysis

Before describing our method, we brieﬂy overview the Euler-Bernoulli (EB) assumption, on which our cross-sectional analysis is based. Assume a beam which has axis direction z ∈ R3 , a cross section Ω of the beam that is perpendicular to z, and a line inside the beam – the neutral axis – which goes through the centroid of Ω (the neutral axis has direction z). For a beams bending deformation, the assumption is threefold (see Fig. 3). First, there is no in-plane deformation and the cross section Ω remains planar. Second, the deformed Ω remains (approximately) perpendicular to the deformed neutral axis. Finally, the neutral axis does not stretch. Based on these assumptions, the inﬁnitesimal strain tensor ∈ R3×3 arising from bending is written as = z ⊗ z, where ∈ R is a linear function over Ω and is zero at its centroid. This assumption is widely-used in the ﬁeld of engineering. In the computer graphics literature, PriMo [Botsch et al. 2006] used a similar assumption of the rigidity of cross sections.
Euler-Bernoulli assumption.

We consider the local coordinate x and y on the virtual cross section Ω taking the origin at centroid g. We deﬁne axis y such that it is on the original section Γ. If the angle between n and x – denoted θ – is large, the virtual section is no longer a good approximation of an actual section in the direction of z. Hence, we discard sections where θ > 45◦ . We consider a ﬁxed set of sample directions for n, speciﬁcally the 13 unique directions of the form (A, B, C)T , where each of A, B, C takes the values (−1, 0, +1). Given a virtual cross section and its neutral axis direction (Γ, n) → (Ω, z), we now consider bending moment equilibrium to compute the stress on Ω. We assume the external force f is applied at a point p on the object’s surface. The resulting external bending moment τ ex ∈ R3 which rotates the virtual cross section can be written as
External bending moment.

Ω neutral axis z (a) rest shape

Ω

τ ex = (I − z ⊗ z) {(p − g) × f } ,

(1)

(b) deformed shape

Figure 3: Deformation of a beam under the Euler-Bernoulli assumption; The cross section Ω is rigid and remains perpendicular to the unstretched neutral axis. While the EB assumption is a widely-used engineering model, its application is traditionally limited to beam structures. Our challenge is to extend its application to free-form 3D objects. In this case, the assumption is reasonable if the representative length of a cross section Ω (e.g. circumradius) is much longer than the distance from Ω to the location the force is applied (i.e. moment arm). Hence, the assumption becomes more accurate as the cross-section thins and the moment-arm lengthens. Our key observation is that these are precisely the conditions in which fracture is most likely

where I is an identity matrix. Note that τ ex is in the plane of Ω. To achieve momentum equilibrium, the virtual cross section must generate a bending moment which balances out this external moment. Using the EB y η assumption, we can denote z-directional strain as a linear function of xy-coordinate ηmax (x, y) = ¯X x + ¯Y y. From Hooke’s law, zξ directional stress is given as σ = E where ψ E is the Young’s modulus. We deﬁne orx 0 thogonal axes ξ and η such that strain is Ω zero (¯X x + ¯Y y = 0) on the axis ξ. Let ψ be the angle between ξ and x. With this axis transformation, the strain can be denoted in ξη-coordinate as (ξ, η) = ¯ξ η, where ¯ξ = ¯X cos ψ + ¯Y sin ψ. The Internal
Internal bending moment.

bending moment vector then becomes: τ in =
Ω

η(E )dΩξ = ¯ξ EIξ ξ,
Ω

(2)

clustering

where Iξ is the second moment of area: Iξ =
Moment equilibrium.

η 2 dΩ. Figure 5: Left: two cross sections are adjacent if triangles are connecting them without crossing other sections. Right: sections in the same plane are grouped based on adjacency information. The neutral axis (black line) is computed for each section group.

Considering the moment equilibrium τ ex + τ in = 0, we obtain ξ = τ ex /|τ ex | and ¯η = |τ ex |/(EIξ ). The maximum stress on the virtual cross section can be written as σmax = |τ ex |/Zξ , where Zξ = Iξ /|η|max and |η|max is the maximum of the absolute value of coordinate η inside this virtual cross section. In the engineering literature, Zξ is called the section modulus, relating the bending moment and maximum stress. When σmax exceeds σL , this section may fracture. Note that the ˆ maximum stress does not depend on the Young’s modulus or other material parameters; based on the cross-section’s shape, force position, and its direction, we can estimate stress inside the object in a purely geometric manner. So far, we have described a way to compute maximum stress on a cross section, given an external force. However, in a complex shape, there may be multiple disjoint cross-sections in a single slice, and the distribution of forces depends on the boundary conditions (i.e. where the object is ﬁxed, and where the external force is applied). Hence, for a group of planar cross sections, we divide the object into two connected surfaces S + and S − , with S + having smaller area than S − . Then, we apply the force somewhere on S + and ﬁx the object at a point somewhere on S − . The motivation for this heuristic is that we usually hold the larger part of an object when applying a force. Fig. 4 illustrates this process. First, we compute all cross-sections of an object {γ1 , γ2 , . . .} in a given plane. Then, we greedily cluster these sections into groups Γ := {Γ1 , Γ2 , . . .} such that each group’s sections Γi ∈ Γ divide the object into a S + and S − . Each group is formed by picking an initial section γi , and then for remaining sections γj , checking if a path from γi to γj exists on each side of the section plane. If so, γj is clustered with γi . We iterate this process until all the sections have been separated into groups, and then for each group Γi , we compute the virtual cross section Ωi .
Clustering cross-sections.

3.2

Optimized 3D Printing Direction

The result of the analysis technique described above is a large number of combinations of cross section and external force. Next we must detect which section/force pairs are most likely to break. Structural weakness of a cross section is deﬁned considering two factors; the magnitude of force needed to break a section, and the area over which the force is distributed. Let fmin (Γ, p, ψ) be the minimal force at position p on the surface needed to produce the critical stress on section Ω with bending direction ψ. From Eq.(1) and Eq.(2), we have
Weakness evaluation.

fmin (Γ, p, ψ) = |(I − ξ ⊗ ξ)(p − g)| σL Zξ η ˆ

(3)

Next we deﬁne a function B(Γ, p, ψ) which indicates the relative ease with which a section/force conﬁguration can be broken. B ˆ is deﬁned as 1/fmin if |fmin | < fmax , and 0 otherwise, where ˆ fmax is a maximum external force (we choose 0.2 kgf). We then deﬁne the relative weakness of a section Γi by integrating B over the potential force point locations on S + W (Γi ) = B(Γi , p(s), ψ)dψds,
2π

+ s∈Si

(4)

Sa

+

γ1=Γa Sa
(a)

( γ2

γ3 ) =Γb Sb
(b) +

γ4=Γc Sc

Sb

S+ c
(c)

where p(s) is the position of force point at a surface point s. We approximate this costly surface integral by computing only on the sections. Since the input shape is a triangle mesh, its cross sections are polylines. Thus, we compute the integration by aggregating B multiplied by lm , which is half the sum of the two neighboring edge lengths for the vertex sm on a polyline. Furthermore, ψ is sampled at intervals J (we used J = 16): W (Γi ) 2πh J
J

lm
Γk ∈Γ+ sm ∈Γk i j=1

B Γi , p(sm ),

2πj J

,

(5)

Figure 4: Three alternatives for separation of an example object into surfaces S + (red) and S − (blue). We apply force at somewhere on S + . The cross-sections are grouped as {Γa , Γb , Γc } = {γ1 , (γ2 , γ3 ), γ4 }. As shown in (b), γ2 and γ3 are in the same group because it is connected from both side.

To efﬁciently determine if sections are connected, we use a connectivity graph. We ﬁrst compute sections of the object at interval h along n (we use h = 32). Next we construct a section adjacency graph, where sections are connected if there is a path of triangles between them that does not cross other sections (Fig. 5-left). We can then quickly determine if sections are accessible from both sides using this adjacency information (Fig. 5right). Finally, for each section Γi we denote the set of other sec+ tions that lie on Si as Γ+ , which will be used for approximate i integration in the next section.
Clustering Computation.

We further accelerate computation by culling sections Γk ∈ Γ+ i which cannot break the cross section Γi . This is accomplished by computing the bounding volume of Γk (we used the circumcircle as a bounding volume) and checking that the minimum breaking ˆ force |fmin | is larger than the maximum-force threshold fmax for all points on the section. Using the machinery described thus far, we can proceed to optimize the object orientation for printing. For a set of given normal directions n, we slice the object at intervals h and compute our weakness metric W (Γi ) for all sections, and then store the identiﬁed “weak” sections as Γw := {Γj ∈ Γw |W (Γj ) = 0}. Once the weak cross-sections are detected, we need only to select an optimal printing direction. As we previously mentioned, objects printed with FDM are mostly
Print Orientation Optimization.

likely to break between layers. Since the bending moment excites force in the direction of neutral axis z, the object should be oriented such that z is as vertical as possible. Hence, we use our weakness metric to weight the neutral axis directions zj corresponding to identiﬁed weak sections Γj , and then obtain the optimal printing direction Θopt as Θopt = arg min
Θ∈R3 ,|Θ|=1 Γj ∈Γw

|T|=17k t = 0.18s

65mm |T|=34k t = 0.31s

40mm

|T|=105k t = 0.90s 25mm

Θ · W (Γj )zj .

(6)
|T|=10k t = 0.13s
23mm

Eq. (6) can be solved by eigen-analysis of a 3x3 symmetric positive deﬁnite matrix Γj ∈Γw W (Γj )zj ⊗ zj . The smallest eigenvector gives the strongest printing direction Θopt . Note that in some cases no printing direction can strengthen all weak cross sections. However we have observed that such cases are rare.

4

Results

Figure 7: More examples. |T | is the triangle count, and t is the total time taken to compute our cross-sectional analysis (using an Intel XeonTM 2.5 GHz CPU machine). Red arrows show the optimal printing directions.

In Fig. 6, we compare our method with a standard second-order linear FEM stress analysis. The force distribution on two different virtual cross sections is displayed. As expected, when the initial section is relatively orthogonal to the local surface, so is the virtual section, and the force magnitude/directions agree well with the ground-truth FEM. As the virtual section diverges from the original section, the directions necessarily diverge as well, but the maximum magnitudes remain comparable. Unlike FEM, our method is not affected by the quality of the surface mesh. Degenerate and “skinny” sliver triangles are common in CAD meshes, but they do not affect our computation (see Fig. 7-rightmost).
external force

shape editing. Based on this analysis we optimize the orientation of the model for 3D printing to increase structural soundness.

References
AUTODESK, 2010. Autodesk 123d. http://www.123dapp.com/. B OTSCH , M., PAULY, M., G ROSS , M., AND KOBBELT, L. 2006. PriMo: coupled prisms for intuitive surface modeling. In Proc. of the 4th Eurographics Symp. on Geom. Proc., SGP ’06, 11–20. G IBSON , I., ROSEN , D. W., AND S TUCKER , B. 2009. Additive Manufacturing Technologies: Rapid Prototyping to Direct Digital Manufacturing, 1st ed. Springer Publishing, Inc. L UO , L., BARAN , I., RUSINKIEWICZ , S., AND M ATUSIK , W. 2012. Chopper: partitioning models into 3D-printable parts. ACM Trans. Graph. 31, 6 (Nov.), 129:1–129:9.

xed b.c. (a) boundary conditions (b) forces on the cross section

Figure 6: Comparison with FEM. Cyan vectors show FEM forces, purples are ours, blue loops are original input cross section, and green loops are virtual cross sections. We also implemented our technique in a 3D mesh modeling tool [Schmidt and Singh 2010]. The accompanying video shows interactive modeling sessions with our structural analysis running on a background thread, and updating real-time visualizations when the model is edited. Fig. 7 shows weak regions, optimal printing directions, and computation times for various objects. Our algorithm scales well up to detailed meshes. In the video, we see the visualization update for a mesh with 650k triangles in a few seconds. We 3D printed several models shown in the ﬁgures, and applied forces to evaluate their strength (see Fig. 1 and accompanying video). We used the MakerBot Replicator 2 and MakerWare v2.2 for printing, with the objects printed as solid (100% inﬁll) to maximize strength. The material we used was polylactic acid (PLA) ﬁlament. Our algorithm assumes the object breaks with bending force, hence it cannot handle complex fracture such as buckling. However, we observed that the locations where objects fracture agreed well with the weakest cross-sections our algorithms identiﬁed, and that our optimal orientation makes objects signiﬁcantly stronger.

M IKLOS , B., G IESEN , J., AND PAULY, M. 2010. Discrete scale axis representations for 3D geometry. ACM Trans. Graph. 29 (July), 101:1–101:10. PANOZZO , D., B LOCK , P., AND S ORKINE -H ORNUNG , O. 2013. Designing unreinforced masonry models. ACM Trans. Graph. 32, 4 (July), 91:1–91:12. ´ P R E VOST, R., W HITING , E., L EFEBVRE , S., AND S ORKINE H ORNUNG , O. 2013. Make it stand: balancing shapes for 3d fabrication. ACM Trans. Graph. 32, 4 (July), 81:1–81:10. S CHMIDT, R., AND S INGH , K. 2010. MeshMixer: an interface for rapid mesh composition. ACM SIGGRAPH 2010 Talks. ˇ S TAVA , O., VANEK , J., B ENES , B., C ARR , N., AND M E CH , R. 2012. Stress relief: improving structural strength of 3D printable objects. ACM Trans. Graph. 31, 4 (July), 48:1–48:11. T IMOSHENKO , S. 1970. Theory of Elasticity, 3 ed. Mcgraw-Hill College, 6. U METANI , N., I GARASHI , T., AND M ITRA , N. J. 2012. Guided exploration of physically valid shapes for furniture design. ACM Trans. Graph. 31, 4 (July), 86:1–86:11. W HITING , E., S HIN , H., WANG , R., O CHSENDORF, J., AND D U RAND , F. 2012. Structural optimization of 3D masonry buildings. ACM Trans. Graph. 31, 6 (Nov.), 159:1–159:11. Z HOU , Q., PANETTA , J., AND Z ORIN , D. 2013. Worst-case structural analysis. ACM Trans. Graph. 32, 4 (July), 137:1–137:12.

5

Conclusion

We present a framework for structural weakness detection of 3D objects which is fast enough to provide real-time feedback during 3D

