Sensitive Couture for Interactive Garment Modeling and Editing
Nobuyuki Umetani
The University of Tokyo

Danny M. Kaufman
Columbia University

Takeo Igarashi
The University of Tokyo / JST ERATO

Eitan Grinspun
Columbia University

Figure 1: “2D or not 2D?” This timeless question is rendered moot by Sensitive Couture, our tool for simultaneous, synchronized modeling and editing of both a 2D garment pattern (top) and its corresponding 3D drape (bottom).

Abstract
We present a novel interactive tool for garment design that enables, for the ﬁrst time, interactive bidirectional editing between 2D patterns and 3D high-ﬁdelity simulated draped forms. This provides a continuous, interactive, and natural design modality in which 2D and 3D representations are simultaneously visible and seamlessly maintain correspondence. Artists can now interactively edit 2D pattern designs and immediately obtain stable accurate feedback online, thus enabling rapid prototyping and an intuitive understanding of complex drape form. CR Categories: I.3.5 [Computer Graphics]: Computational Geometry and Object Modeling—Physically based modeling; Links: DL PDF W EB V IDEO C ODE

pervasion is rooted in clothing’s role as a medium for personal expression. Garments that “suit us” invoke a sense of conﬁdence and satisfaction. Tailoring requires the insight to combine ﬂat 2D panels of woven textiles that, stitched together into a garment, exhibit an expressive 3D shape when worn. In the language of differential geometry, a garment is simultaneously both a 2D and a 3D object: on the one hand, it may be viewed as the initial assembly of ﬂat panels, each having holes and curved/kinked boundaries; on the other hand, it can be understood by its ultimate 3D form. Classical iterative design The garment design process involves many iterations of drafting, synthesis, and revision that alternate between 2D and 3D perspectives: a tentative 2D panel design is created from which a corresponding garment is manufactured; the resulting garment reveals desired alterations to the 3D form that, in turn, induce revisions of the 2D design; and so forth. These many iterations consume raw materials, time, and energy. Even veteran dressmaking teams go through many iterations where the designer conceptualizes 3D forms in sketches and the pattern maker drafts precise 2D outlines. The drape of a garment over a curved body is affected by frictional contact and the map from the 2D to 3D representation is complex and nonlinear. The challenge in sketching 3D forms is to stay true to the wrinkles and bulges that will be formed when a nearly-inextensible surface is draped over a body. Vice versa, revising 2D patterns often induces not only the expected alteration of the 3D forms but also unintended “side-effects” (pinching, buckling, tight spots) which are often only discovered after time- and resource-consuming assembly. It takes great effort and many attempts to bring the 2D and 3D views into correspondence, making design an inherently iterative, painstaking process.

1

Introduction

The multi-billion dollar fashion industry caters to every strata of consumption, from penny socks to haute-couture pieces costing thousands (even millions) of dollars [Sherman 2006]. Fashion’s

While both the 2D (“intrinsic”) and 3D (“extrinsic”) perspectives are innate aspects of garment design, existing software tools force one view in lieu of the other. The situation is ampliﬁed in the computer animation industry. In general, artists either sculpt in 3D or draft in 2D but not both, and the choice is typically determined by the software used at the studio. Sculpting tools provide artists with a familiar interaction paradigm, but do not account for the special (low Gaussian curvature) structure of draped fabric, thus results appear less natural. Sometimes the 3D mesh is computationally ﬂattened [Decaudin et al. 2006], a process that alters the 3D form and consumes time. On the other hand, drafting tools ensure that the ﬁnal form is natural, but the artist must learn to draft 2D patterns, and wait for draping computations that produce the 3D form [Volino et al. 2005]. To sum, existing ﬂattening (3D→2D) and draping (2D→3D) computations are akin in their effect to the time and material impediments of manual dressmaking: they divide design into discrete tasks and inhibit a free-ﬂowing creative process. Figure 3: A Sensitive Couture screen snapshot.
Sensitive Couture (SC) for interactive bidirectional design

We present a novel approach to garment design, similar in spirit to the system proposed by Volino et al. [2005]. Our software tool provides a continuous, interactive, natural design modality. The 2D design and 3D draped form receive equal status, are simultaneously visible, and seamlessly maintain correspondence. The artist may interactively edit the 2D design immediately observing how these changes affect 3D form. The impact on the user is more than merely a quantitative acceleration of the old design loop. Consider a small metallic “brain-teaser” puzzle, in which two linkages must be separated. Staring at the puzzle and thinking for a long time does not get one very far. But a little bit of manual tinkering quickly builds intuition about the “design space” and voil` ! a Figure 2: Can you In this vein, an interactive, synchronized solve a brain teaser garment design process offers a qualitawithout interaction? tive jump in the way that design is carried out, where the discrete transitions between phases vanish: drafting, manufacturing, and critique of 3D form are fused into one seamless, natural process. There are several technical hurdles to incorporating online cloth simulation in the design process: existing high-resolution simulation codes are not yet fast enough for maintaining interactiverate correspondence between the 2D and 3D views. The simulation must account for geometric nonlinearity and frictional contact while remaining stable even under rapid user input. To address these challenges, our design tool employs a combination of techniques, including (i) fast prediction of 3D forms from cached shapes using sensitivity analysis and generalized moving least squares, (ii) fast invisible remeshing using positive mean value coordinates to accommodate arbitrary revisions of the pattern boundary, and (iii) stable and accurate cloth modeling using an isometric bending model, a modiﬁed St. Venant-Kirchhoff membrane element, and progressive reﬁnement. The novel use of sensitivity analysis in enabling interactive-rate synchronization of the 2D and 3D perspectives is reﬂected in the tool’s name, Sensitive Couture.

tems, Browzwear, CADTERNSCustom Clothing Inc., Fashion CAD, Fashion Matters, Gemini CAD, GRAFIS, Investronica Systems, Marvelous Designer, Mechanix, OptiTex, Pad Systems, Pattern Works Int’l, and others provide a variety of tools focusing on 2D pattern creation and/or 3D draping for garment design. Sketch-Based Design Sketch-based approaches to garment design have produced promising 2D→3D design processes that enable the mapping of fashion sketches to procedurally generated three-dimensional garments [Decaudin et al. 2006; Igarashi and Hughes 2003; Turquin et al. 2007]. These methods leverage a designer’s honed intuition about garment shape and ﬂow. Advances in ﬂattening sketch space to developable patterns [Decaudin et al. 2006], placement and sliding of generated garments [Igarashi and Hughes 2003], and position-based garment generation [Turquin et al. 2007] have all enabled improved one-way work ﬂow. However, such approaches are still hampered by the limitations of procedural, rather than physically based, garment generation and have yet to be extended to enable bidirectional editing. Cloth Simulation The simulation of cloth, and more generally shells, is a widely treated area [Bridson et al. 2003; Baraff and Witkin 1998; Goldenthal et al. 2007]. Mass-spring models generally enable fast and simple computational models for rapid cloth simulation [Meyer et al. 2001; Choi and Ko 2002] providing responsiveness at the cost of accuracy and stability. Recent methods have also generated real-time wrinkle synthesis [Rohmer et al. 2010], as well as more generally, real-time, data-driven reduced cloth modeling [Feng et al. 2010; Wang et al. 2010]. Interactive Cloth Design and Simulation Physically based interactive design of clothing has long been a grand challenge for simulation and graphics [Volino et al. 2005]. Recently, promising frameworks have been proposed that suggest that interactive design processes combining 2D and 3D perspectives may be in reach for textile design [Volino et al. 2005]. Complementary developments in direct interactive editing on garment meshes [Keckeisen et al. 2004] and the real-time coupling between edits and simulation for simple mass-spring systems [Mori and Igarashi 2007], have likewise offered tantalizing forward progress towards seamless bidirectional garment authoring. Design Sensitivity Analysis In the context of fashion, the preferences of a designer are hard to quantify and their choices difﬁcult to predict. Design sequences can be expected to evolve throughout the creative process, potentially requiring reliable computation

2

Related Work

Fashion being a huge ﬁeld, computer-aided garment design has grown into an industry of its own, as evidenced by the myriad companies producing garment CAD products; spanning the ﬁve inhabited continents, companies such as AGE Technologies, AMSSys-

over broad ranges of design space. Thus we put ofﬂine optimization aside in favor of a sensitivity based strategy that enables a truly interactive exploration of design. Similar in spirit to differential manipulation [Gleicher and Witkin 1991], which uses sensitivity maps to enforce geometric constraints at interactive rates, we propose to use design sensitivity to maintain the static equilibrium of drape pose. In the engineering literature, this formulation is central to design sensitivity analysis, which attempts to provide (ﬁrst-order) insight into the relationships between design and performance in either one-off calculations or ofﬂine optimizations; Van Keulen [2005] provides a recent survey, and Derouet-Jourdan et al. [2010] provide a recent application to rod design.

Sewing/pleating The designer can specify that two boundary segments should be sewn. When the two segments differ in length, a pleat is formed, i.e., a sequence of attractive doubled-back folds that gather a longer piece of fabric into a shorter length. In all cases, SC automatically selects the boundary orientations that avoid cloth inversion. Symmetry The designer may mark boundary pieces as symmetric about an axis, and subsequently SC enforces these symmetries. Sloper parameters We emphasize that the designer can adjust sloper parameters (e.g., sleeve length, waist width) at any time. These adjustments can be made by manipulating a slider, or by direct manipulation in the 3D view. For example, the user can “tug” on a hemline to make a skirt longer (see Fig. 1, left and accompanying movie).

3

Interaction Tools

4
As depicted in Fig. 3 and the accompanying movie, Sensitive Couture (SC) presents the 2D and 3D design perspectives simultaneously. All selection operations are naturally at home in either the 2D or 3D window. A typical session begins with layout of a “blank canvas.” While SC affords from-scratch creation of patterns, designers typically begin with a sloper (or block), a basic pattern drafted to standard measurements intended as a generic starting point [Digest 2002] (see Fig. 4). Slopers are typically parameterized by height, girth, sleeve length, and so forth. Whereas typical CAD tools might navigate the parametric space using sliders, SC further allows the designer a “tangible” navigation of parameter space via direct manipulation of the 2D pattern and the 3D draped shape, reinforcing the idea that all components are synchronized and can be accessed in any order. Indeed, every aspect of the SC user experience emphasizes a freeﬂowing (as opposed to sequential or “linear”) design process. For instance, as the designer makes detailed alterations (“strokes”) to patterns by inserting darts, modifying boundary curves, etc., these strokes “ride” over the sloper, in the sense that the designer may revisit the parameters of the sloper at any time without undoing the creative, style-deﬁning strokes. If a sloper serves as blank canvas, then the rich diversity of ﬁnal designs comes from the various creative strokes applied by designers. Our research goal was to understand the under-the-hood infrastructure needed for interactive design in a real-application (practical) context, thus we focused on a small but useful set of front-end tools intended to stress-test the underlying simulation infrastructure: Curve edits The designer may alter the shape and position of the pattern boundary, which is deﬁned by the control degrees of freedom (DOFs) of a spline. Positions are stored relative to the sloper, and are therefore naturally maintained over adjustment to the underlying sloper’s dimensions. Darts The designer may add or modify darts, triangular folds or excisions that induce intrinsic curvature (so-called cone singularities) thus “ﬁlling out” the 3D form. SC understands darts as “ﬁrst-order primitives,” so they have dart-speciﬁc DOFs to control their position, shape, and size. The designer adds a dart by drawing a line using the dart pen. If the line intersects a boundary, SC creates a triangular dart that “rides” the boundary, i.e., the designer may later freely slide the dart along the boundary.

Sensitive Interaction

As the user revises the design, SC must keep the 2D and 3D perspectives synchronized. The 2D and 3D conﬁgurations, each realized by a mesh of n vertices, are related by the static equilibrium equation R(X, x) = F(X, x) − Q(X, x) = 0 ,
2n

(1)

where X ∈ R is the undeformed conﬁguration given by the 2D perspective, x ∈ R3n is the deformed conﬁguration given by the 3D perspective, and F, Q ∈ R3n are the external (e.g., gravitational) and internal (e.g., elastic) forces, respectively. The 2D and 3D pictures are in correspondence when the residual R(X, x) ∈ R3n vanishes. We solve (1) from scratch once for the initial drape (§7), an operation too costly to repeat at interactive rates due to the nonlinearity of (1). Fortunately, in design processes, most user input effects incremental revisions to the existing design.
Design sensitivity analysis Suppose that the designer alters the 2D conﬁguration X to a nearby conﬁguration X + ΔX. Expanding (1) to ﬁrst order yields the incremental update equation

(∇X R(X, x)) ΔX + (∇x R(X, x)) Δx = 0 relating the change ΔX in the 2D to the change Δx in the 3D picture, by a linear map S : ΔX → Δx Δx = (∇x R)−1 (∇X R)ΔX = SΔX. where S is encoded by a 3n × 2n design sensitivity matrix. In practice one applies the map by solving the incremental update equation using a linear solver. Note that ∇x R is the usual stiffness matrix associated with a nonlinear statics problem: if the static problem has a nonsingular stiffness matrix, then ∇x R is full rank.
Linear sensitivity is insufﬁcient

Buckling, wrinkling, and static friction all make for a nonlinear relation between the 2D design and the 3D draped form. While linear sensitivity is a good ﬁrst step, we found that for the larger edits typical at the start of the design process, or for radical redesigns, the local model produced by sensitivity analysis (i.e., linearization about the pre-revised conﬁguration) does not remain valid for the full extent of the editing operation. In short, a linear sensitivity response centered about the original design is insufﬁcient when the change in design is large. Therefore, we extend the basic sensitivity-based approach by accounting for nonlinearity via coupled simulation and progressive nonlinear modeling.

Figure 4: Starting with just a few standard sloper templates artists can easily generate a wide variety of garments. When the pointer moves to position d = (d1 , d2 )T , SC can draw upon two kinds of readily reusable data: the draped conﬁguration x0 ∈ R3n (i.e., zeroth-order data) at the previous pointer position d0 ∈ R2 , and the sensitivities sm = ∂x/∂d1 , sm = ∂x/∂d2 of 2 1 the draped conﬁgurations xm ∈ R3n (i.e., ﬁrst-order data) at the cached previous conﬁgurations dm ∈ R2 (m = 1, . . . , M ). Since GMLS is a direct extension of MLS, it is possible to extend the usual derivations of MLS and GMLS interpolation to now account for a combination of zeroth- and ﬁrst-order samples. In particular, following the notation of Martin et al. [2010], the interpolated conﬁguration ﬁeld is given by x(d) = a(d)p(d) ∈ R3n , where a ∈ R3n×3 is a coefﬁcient matrix applied to the monomial vector p = (1, d1 , d2 )T . At a given pointer position d, the coefﬁcients a are the minimizers of the least-squares error metric
M X m=0

During idle times, such as pauses in mouse movement, we integrate the system in time, starting from the conﬁguration produced via sensitivity-based increments. If this were a dynamic simulation, the interruption of time integration with sensitivity-based positional updates would likely cause great instabilities or other artifacts. Fortunately, our interest in static draping rather than inertial response allows us to use kinetic damping (§7) and hence to be well insulated from any “spikes” that might result from interleaving time integration with direct positional updates.
Progressive nonlinear modeling In the most crucial interactive editing operations—those where the designer hesitates in selecting between multiple design alternatives—the editing operation may endure over a longer duration (a few dozen seconds), and pause at various points in design space as options are being considered. In these cases, SC takes advantage of the available time to evaluate and cache additional linearizations (sensitivity matrices), thus building up a nonlinear model of drapes in the local design space. Compared to an up-front precomputation, this progressive enrichment of the local model allocates computation proportionally to the interest in a given region of design space, i.e., it is most accurate near designs that interest the user.

Coupled simulation

J(a) = +

w(d − dm ) ap(dm ) − xm
m

2

M X m=1

‚2 2 ‚ X ‚ ∂p ‚ m‚ ‚a w(d − d ) ‚ ∂dj − sj ‚ ,
j=1

How do we aggregate the linearizations into a local model of simulation response in design space? In the context of ofﬂine optimization, some works have considered moving least squares (MLS) interpolation [Breitkopf et al. 2005]. MLS requires dense, wellspaced samples, does not make use of derivative information, and breaks down when the sampling pattern degenerates (i.e., there are too few samples along one dimension). To alleviate these difﬁculties, Martin et al. [2010] use generalized moving least squares (GMLS), which extend MLS interpolation to incorporate derivative information. Indeed, GMLS can make direct use of the sensitivity matrices that we compute [Atluri et al. 1999; Fries and Matthies 2003].

where w is a suitably chosen weighting function. We use w(d − dm ) = 1/( dm − d 2 + 2 ), with a small constant guaranteeing ﬁnite weight (we use 2 = 10−3 ). As in the usual (G)MLS derivation, we analytically minimize J with respect to a, obtaining
M X m=0 M 2 XX m=1 j=1 T −1

x(d) =
m

xm N m (d) +

m sm Nj (d), j

N (d) = p(d) G(d)

p(dm )w(d − dm ) , ∂p m Nj (d) = p(d)T G(d)−1 w(d − dm ) , ∂dj

drag. A simple and useful extension would be to visualize, before the mouse is depressed, the degree of sensitivity of a screen point, as a guide for the user.

5

Cloth Model

Figure 5: Comparison of sensitivity strategies. Cloth is draped on a
sphere with respectively, from left to right, no sensitivity, linear sensitivity, progressive sensitivity analysis with GMLS, and nonlinear (“ground truth”) static equilibrium.

In selecting a cloth model for an interactive tool, our primary desiderata were stability and fast computation. Typical to most cloth models, we treat bending and stretching models separately [Baraff and Witkin 1998; Bridson et al. 2003]. We chose to work with triangle meshes, but the overall framework does not depend on this choice. Bending Our ﬁnal implementation uses the isometric bending model (IBM) of Bergou et al. [2006], which has a constant energy Hessian (force Jacobian), therefore (a) eliminating the cost of the force Jacobian computation for implicit time integration, (b) providing a simple matrix-vector multiplication for bending force computation (which would be easy to port to the GPU), and (c) ensuring that the Hessian remains positive semi-deﬁnite for all conﬁgurations and thereby stabilizing numerics. Before adopting IBM, we implemented a co-rotational treatment of the Discrete Kirchhoff Triangle [Batoz et al. 1980; Khosravi et al. 2007], but found that we needed a stronger guarantee of stability in the context of our interactive tool. We then adopted nonlinear hinges [Bridson et al. 2003; Grinspun et al. 2003], which lose some of the meshingindependence of DKT [Batoz et al. 1980] but increase stability. Ultimately, the cost of force Jacobian computation in the nonlinear models drove us to use IBM, which drops the generality of an arbitrary stress-strain map in favor of increased stability and speedier computation. Membrane Our ﬁnal implementation uses a stabilized St. Venant-Kirchhoff (StVK) constant strain triangle (CST). The usual StVK CST element, when it is compressed, can induce instability [Volino et al. 2009], because its force Jacobian becomes indeﬁnite. Similar to Teran et al. [2005], when the element is in a compressed conﬁguration, we adjust the Jacobian entries to eliminate negative eigenvalues. This stabilization affects only the trajectory toward the draped conﬁguration, but it does not alter the set of solutions of the static equilibrium equations. To sum, this stabilization assures stability without affecting the draped shape. We ﬁrst tried a geometric model governed by changes in edge length and triangle area [Grinspun et al. 2003]. We found that the area term induced instabilities – the length term alone was stable, but lacked similitude to fabric [Delingette 2008]. We therefore transitioned to the CST model, ﬁrst using a corotational treatment [Bittnar and Sejnoha 1996], which was stable, but was relatively slow in converging to the equilibrium draped shape StVK membrane, compared to our ﬁnal (quartic) CST element. In hindsight, we might have also applied the stabilization to the area term of the geometric model, but since the stabilized StVK CST worked well, and is a convergent model, we were satisﬁed.
Robustness evaluation We have found the combination of the guaranteed positive semi-deﬁnite IBM bending and stabilized StVK CST membrane models to be more stable than other combinations in ongoing usage of SC. Since, to our knowledge, this is the ﬁrst report of combining these approaches, we include for reference the results of two stability benchmarks (see Fig. 6) in which the static equilibrium (1) is solved with kinetic damping (see §7) starting from a random initial guess. Alternatives, discussed above, that we tried earlier were either unstable or were slower to converge.

and G(d) = +
M X m=0 M X m=1

w(d − dm )p(dm )p(dm )T w(d − dm )
2 X ∂p ∂p T . ∂dj ∂dj j=1

Comparing different strategies Consider as a canonical example a hanging cloth partly draped on a sphere, and an editing operation in which the (undeformed, 2D material-space) length of the strip of cloth is increased. Fig. 5 and the accompanying movie compare the result of an editing operation conducted using only a dynamic, kinetically-damped simulation, augmented with linear sensitivity analysis, or augmented with progressive GMLS modeling. Here Fig. 5 (a) and (b) give the cached solutions employed by sensitivity. Observe (left to right in Fig. 5) that the dynamic simulation lags behind the user’s edit; the formation of distracting wrinkling artifacts can be understood by interpreting the dynamic simulation as a process that approaches the ﬁnal equilibrium state in a ﬁne-to-coarse manner. Linear sensitivity, which can be viewed as a “global” or “implicit” approach, eliminates these artifacts, but, in using a linear model, does not approximate the overall draped shape well. The GMLS interpolation exhibits stable results that better agree with ground truth (Fig. 5, far right).

4.1

Bidirectional Sensitivity Enables Direct 3D Editing

Sensitivity information also enables SC to interpret editing operations applied directly to the 3D form. Consider editing a sloper parameter g ∈ R (e.g., sleeve length), as depicted in Fig. 1, left. When the pointer is depressed over the 3D view, SC identiﬁes the corresponding material point (u, v) ∈ R2 on the cloth, and computes the sensitivity vector s = ∇g x(u, v) ∈ R3 , i.e., the ﬁrst-order 3D motion of the cloth at the picked point with respect to sloper parameter g. The 3-vector s is projected to the screen space vector ˆ ∈ R2 , which s gives the ﬁrst-order motion of the picked screen point with respect to g. As the user drags the pointer from d ∈ R2 to d + Δd ∈ R2 , SC updates the sloper parameter via the incremental relation Δg = ˆ · Δd/ ˆ 2 . s s Observe that when ˆ is small, the selected screen point is ins sensitive to g; for example, the position of a shirt collar may be independent of sleeve length. Thus, for small ˆ we neglect the s

polate along the boundary, and use positive mean value coordinates (PMVC) [Lipman et al. 2007] to efﬁciently determine the tensor ﬁeld Ψ throughout the domain. PMVC builds on mean value coordinates (MVC) [Floater 2003] by incorporating a notion of visibility, which we found enhances the coordinate’s interpolation capability in the non-convex higher genus shapes typical of 2D design patterns. Fig. 8 compares the two linear mesh deformation models we implemented based on MVC and PMVC, where we observed that PMVC produces a homogenous deformation that avoids the distortions and inversions. Figure 6: Stability Benchmark: (top) Snapshots at initial, third, 50th, and 200th iterations for the draping of a rectangular (membrane-dominated) textile (3K triangles, 12s total computation). (bottom) Snapshots at initial, third, 50th, and 100th iterations for static equilibrium of a rectangular (bending-dominated) thin plate with bending stiffness 100× that of textile (2K triangles, 4s total computation).

6

Mesh Updates

When the designer uses the pointer to drag 2D pattern elements (e.g., boundary vertices, darts, boundary spline tangents), SC updates the (unseen) positions of the internal vertices (see Fig. 8) thus maintaining uniform, well-shaped elements throughout the material domain. The concatenated change of all internal and boundary vertex positions makes up the change ΔX in the 2D conﬁguration fed to the sensitivity-based 3D update. While such a mesh update might be achieved by solving equilibrium of the mass spring system, the resulting nonlinear motion with respect to pattern element alteration makes ﬁrst-order sensitivity analysis incorrect. Instead, we adopt a coordinate-based mesh manipulation that is linear in pattern element alteration.

Figure 8: Our 2D pattern manipulation employs positive mean value coordinates (PMVC) with Delaunay smoothing. This allows for linear interpolation over a domain, while enabling a more satisfying interpolation in nonconvex higher-genus domains. Here we illustrate the advantages: consider (a) an undeformed mesh, (b) mesh manipulation with MVC, (c) mesh manipulation with PMVC, and ﬁnally (d) PMVC with Delaunay smoothing. Applying the sensitivity map With the tensor ﬁeld Ψ = [Ψ1 Ψ2 . . .]T in hand, sensitivity is calculated by mapping pointer movement to 2D mesh movement ΔX = ΨΔd. We note that the typical sensitivity analysis considered in engineering design does not involve this extra degree of mapping, since sensitivity is typically conducted with respect to a speciﬁc boundary mesh element [Van Keulen et al. 2005]. Fast and slow remeshing Over the course of multiple large manipulations, the mesh may distort necessitating remeshing. We ﬁrst attempt Delaunay smoothing, updating mesh connectivity retaining nodal positions. With our ﬁnite element discretization, displacement and sensitivity are stored at vertices and need not be recomputed, making this an inexpensive way to improve the mesh. If mesh quality (ratio of diameter of incircle against the maximum edge length) remains poor, SC rebuilds the mesh from scratch and interpolates the simulation state to the new mesh using barycentric coordinates.

Figure 7: Action of Ψ for (left) translation of an interior (diamond) dart, (center) translation of a boundary dart, and (right) adjustment of boundary dart opening. Mapping pointer movement to alterations For each kind of pattern element, we ﬁrst deﬁne how pointer motion affects the control vertices (CVs) of a 2D pattern element; e.g., for a boundary dart, a drag centered inside the dart moves the three CVs identically, whereas a drag of the dart’s interior CV leaves the boundary vertices stationary. Let Ψi be the 2 × 2 tensor relating pointer movement Δd to the movement Ψi Δd of the ith CV. Typically, our tools use: (Fig. 7-left) Ψ = I or Ψ = 0, in which the CV follows the pointer or remains stationary, respectively; (Fig. 7-center) Ψ = eeT , in which the CV shadows the pointer movement only in the direction e; or (Fig. 7-right) Ψ = ei eT in which the CV moves j along ei when the pointer moves along ej . Interpolating the alteration Having deﬁned Ψ at the CVs, it remains to interpolate the motion in the remainder of the domain. Since Ψ is known at all boundary CVs, we linearly inter-

7

Numerics of Time Integration

SC intends to display the static drape of the cloth, consequently any computation invested into capturing dynamics is wasted effort. When a previous static solution is not available for an incremental sensitive update, SC must ﬁnd the static equilibrium from scratch, and do so quickly. A from-scratch solve is needed not only for the initial drape, but also when new 2D pattern elements are added midway through design. One of the fastest ways we found to solve the static equilibirum (1) from scratch is to employ kinetic damping [Barnes 1988; Volino and Magnenat-Thalmann 2007], which integrates the (undamped) equations of motion while monitoring total kinetic energy at each time step. When the kinetic energy reaches a local maximum (a condition evaluated by considering three consecutive time steps), the kinetic damping approach zeros the velocity (the kinetic energy). The intuition behind this is that in a conservative oscilla-

tory system, when kinetic energy is at a maximum, potential energy is at a minimum. When the system is far from the minimal potential, damping would slow down the approach to the minimum; when the system is close to the minimal potential, reducing the momentum helps to avoid overshooting the minimum. We found that, in practice, kinetic damping is simple to implement, and reaches the draped conﬁguration faster than a dynamic simulation with Rayleigh damping, an application of gradient descent, or the stabilized Newton’s method. We apply kinetic damping to the semi-implicit time integration scheme proposed by Baraff and Witkin [1998]. Since the coefﬁcient matrix of the dynamic simulation and sensitivity analysis are both positive-deﬁnite, we solve the system using conjugate gradients preconditioned with ILU(0) [Saad 2003]. While the IBM bending model has a constant Hessian, the StVK CST membrane model does not, and we must numerically factorize the matrix at every time step. The performance of ILU(0) preconditioning is (surprisingly) signiﬁcantly inﬂuenced by choices in the treatment of seams. SC sews boundaries of corresponding panels using Hookean springs. In general, the boundaries do not correspond in length—an important feature in dressmaking used to effect pleats and rufﬂes—nor in connectivity, therefore, SC connects the (“emitting”) vertices of the one panel with springs anchored at (“receiving”) boundary edges of the other panel (see Fig. 7). To avoid gaps at the seams, the seam springs are much stiffer than textile tensile stiffness. The consequent linear system has stiff and weak components, thus the success of ILU(0) preconditioning depends on the permutation of matrix entries [Saad 2003]. In a nutshell, ILU(0) favors permutations where large entries appear earlier (toward topleft of matrix) and small entries appear later (bottom-right). Entries associated to emitting vertices dominate entries of receiving vertices, which in turn dominate all other vertices. Before considering penalty-based seams, we used Lagrange multipliers, which allow for exact constraint enforcement without preselection of a spring stiffness. We were not satisﬁed with the increase in the linear system size and the indeﬁniteness of the resulting system matrix, which combined slowed convergence. We then observed that the usual problems plaguing penalty methods are less relevant to our context: since our problem setting is ﬁxed (the spatial scale of the cloth designs do not vary by orders of magnitude), estimating the penalty stiffness once up-front is sufﬁcient to obtain a good seal at the seams. The penalty method maintains the positive-deﬁniteness of the system, and since the set of dominating matrix entries is given by a simple tallying of seam vertices (a set which remains constant except during exceptional stitching events), the permutation for ILU(0) is of negligible implementation and computational cost.
Contact model

movement, to ensure Coulomb’s Law is satisﬁed by these anchor spring forces. This allowed us to obtain stable draping and frictional wrinkling. In general, for a nonlinear cloth statics problem, there exist conﬁgurations for which the stiffness matrix is close to singular. Consider a horizontal cantilevered rectangle of sufﬁciently thin fabric: intuitively, it can’t hold itself up. Quantitatively, gravity acts against the bending mode. The ratio of bending membrane stiffness of a thin plate is O(h2 ) where h is the thickness measured relative to the object’s characteristic length [Malvern 1969]. In principle one could select h so small that the conﬁguration is near singular, with kernel corresponding to normal displacements. In practice, we did not encounter this problem while using SC. However, for completeness, we did experiment with the cantelevered rectangle to induce this problem. Since the kernel (must) correspond to normal displacements, the remedy is direct: if the solver fails to converge, we recompute S with bending stiffness corresponding to h = 1/100, which is sufﬁciently thick to avoid a singular matrix. The modiﬁcation of the bending stiffness is local to the sensitivity computation, and does not affect the bending stiffness used in determining the ultimate static drape. We found that this stabilization was not invoked during cloth design, including all the examples shown in the video.
Full-rank of sensitivity matrix

7.1

Progressive Reﬁnement

We ﬁnd that as users explore design space with SC, detailed cloth behavior is unnecessary during the sketch-like exploratory phases where rapid-ﬁre design choices are made. On the other hand, during the slower, reﬁnement-oriented phases of garment design, ﬁne-level details are critical. We therefore focus on progressive reﬁnement a technique long-used in graphical applications to provide a sense of immediacy [Hoppe 1996]. We employ the so-called Cascading Multigrid approach [Bornemann and Deuﬂhard 1996]. As users provide input, we initially solve the drape using a coarsened mesh. If we reach convergence at the coarse-level prior to the initiation of new design edits, we then warm start our ﬁne mesh solve with the coarse solution. For preview we always display the ﬁne mesh representation. Fine-level nodes are updated progressively: ﬁrst via barycentric coordinates from the coarsened solution and later, when not interrupted, via direct update from the ﬁne-level solve.

7.2

Sensitive Couture Workﬂow

Our approach is then best illustrated by considering a typical editing step (see also Fig. 11): (1) Mouse click Design sensitivity computation. The mapping between mesh updates and XY mouse movement is computed. Sensitivity analysis then calculates the corresponding bi-modal linear response, at the clicked point, with respect to these maps (§6). (2) Drag Sensitive response. While edits are performed with the mouse button down, SC provides instantaneous linear response. As the editing process continues progressive nonlinear modeling enriches the local model and the corresponding response (§4). (3) Release Time Integration. When the mouse button is released the current sensitivity conﬁguration warm starts the next time-integration cycle (§7).

SC models contact between the garment and the body, but does not consider garment self-contact. Contact and friction between body and cloth are essential for cloth drape simulation. We opted for speed and robustness at some expense to accuracy. As with seaming we enforce contact constraints at mesh nodes using penalty springs. For contact we place normal springs at collision sites detected by a one-time, precomputed adaptive signed distance ﬁeld [Frisken et al. 2000]. We model friction using a moving anchor spring method [Hasegawa et al. 2003] that enables both static and dynamic friction modes. Contacting nodes are connected by springs to seeded anchors vertices placed on the contacting surface. We then update (or release) anchor positions, with respect to nodal

examples Blue Armadillo (Fig. 4) Man (Fig. 9) Woman (Fig. 9) Armadillo (Fig. 9) Heart (Fig. 10)

coarse fine stretching g area density y bending (kg/m^2) nodes nodes stiffness (Nm) stiffness (N/m) -8 1682 10168 10 10 0.20 1634 1580 1600 1543 10149 10040 10073 5032 10-8 10-8 5x10-6 3x10-4 10 10 200 2000 0.20 0.20 0.15 0.08

n drag operations (fps) avg max min 17.0 19.9 10.1 15.0 19.5 19.3 20.7 17.2 23.0 22.0 22.2 11.1 16.0 17.0 19.3

coarse solve (fps) s e avg max min 17.4 20.4 15.3 20.4 25.1 25.1 24.2 22.7 28.5 26.3 25.5 18.8 22.9 23.8 22.7

fine solve (fps) f avg max min 2.4 2.7 1.9 2.4 2.9 3.1 3.2 3.8 3.2 2.0 2.6 3.1 5.1

remesh (ms) avg 233 227 144 146 123

sensitivity (ms) s GMLS interp. (ms) avg max min avg 145 178 82 0.38 316 310 228 639 492 440 513 419 170 155 116 767 0.36 0.38 0.40 0.39

7.2 10.0

Table 1: SC session parameters, statistics, and timings: all timings were measured on an Intel Core 2 Duo 2.66 GHz laptop, 4Gb memory.

8

Results and Discussion

Figure 1 illustrates the bidirectional SC workﬂow for designing garments on 3D models. SC enables designer edits of both the 2D pattern (Fig. 1, right) and the 3D draped model (Fig. 1, left). Material parameters for fabrics used are estimated both by measurement and experiment. We measure the areal density of fabrics and then adjust stiffnesses to match simulations with on-sphere draping tests. A video accompanying this paper demonstrates the interactive, stable workﬂow provided by SC during the various phases of the garment design process. Building high-ﬁdelity interactive rate simulation and editing tools stressed a range of tried and true methods. In many cases we discovered that techniques that performed well in standard settings did not satisfy our needs for seamless, interactive rate updates. Often obtaining working solutions required unexpected and complex combinations of methods. Throughout our discussion we have documented both what did not work, as well as what did (and thus made SC successful). Correspondingly we have provided comparisons throughout our discussion to explain these issues. These comparisons and validations can be found in Figures 5, 6, and 8, while in Table 1 we present timing and performance statistics for a range of SC sessions.

Figure 10: In principle, SC could be extended to many other ﬂexible materials, enabling the design of upholstery, aluminum sculptures, or these paper sculptures. (Left to right): an artist produced 2D pattern of darts, the corresponding 3D paper simulation, and the manufactured papercraft objects. We have yet to extend SC to incorporate the constitutive model of materials such as paper. consider the drape of SC garments on static 3D models. Clearly a desirable extension is for a dynamic preview capability allowing the simulation of 3D garment behavior subject to 3D model motion. We look forward to extending SC to a user-evaluated, fully-featured tool targeting design professionals in both animation and fashion. However, the design of shell-based objects also has exciting applications beyond garment design (see Fig. 10). We expect that SCtype tools can be extended to address interactive design needs in architecture, industrial design, and engineering, e.g., tensile structures, metal folding processes, upholstery, balloons. In principle, the 3D editing of more than two design degrees of freedom (DOFs) could follow the same line of thought: so long as no more than two of the DOFs have non-negligible screen space vectors at the drag point, the editing operation is unambiguous and straightforward to implement. However, the likelihood that the edit operation remains unambiguous decreases as the number of available DOFs increases, raising interesting directions for future work: (a) SC should intuitively convey to the user which DOFs are affected by the edit (information that varies over screen space), (b) is there an intuitive (unambiguous and deterministic) way of mapping the 2D drag to the simultaneous revision of more than two DOFs?

8.1

Evaluation and Garment Manufacture

Here we wish to focus on how these parts sum to a whole in SC. As such, we have documented and captured (see our accompanying movies) the editing process and work ﬂow of a variety of skilled and amateur clothing designers as they use SC to design a range of garments (see Fig. 9). Garments designed in our SC sessions were then manufactured from the generated patterns. See Figure 9 for snapshots of the editing process, the completed 2D designs, simulated ﬁnal drapes, and corresponding manufactured garments.

9

Conclusion

We have presented a novel interactive garment design tool, Sensitive Couture (SC), that, for the ﬁrst time, offers seamless bidirectional design and editing capabilities for the generation of 2D patterns and the online simulation of drape. SC provides a continuous, interactive, natural design modality in which the 2D design and 3D draped form receive equal status, are simultaneously visible, and seamlessly maintain correspondence. As such, artists are enabled to interactively edit and explore 2D designs and immediately observe how these changes affect 3D form.

9.2

Future work in integrated design, simulation, and interaction

9.1

Future extensions to Sensitive Couture

While contact remains well-resolved for body-garment interaction, complex folding patterns will additionally require self-contact resolution. We are interested in exploring local methods of identifying and robustly treating self-contact and intersection in the SC framework. Similarly, as in the traditional couture setting, we currently

Integrated design, simulation, and interaction (IDSI) is an outstanding challenging open problem in graphics and engineering. SC grew out of our interest in tackling this longstanding problem. Many application domains do not admit interactive, physics-in-theloop design solutions for problems of practically relevant complexity. In this work we identiﬁed garment design as a domain for which IDSI was (barely) within reach for problems of real-world complexity on current hardware.

Figure 9: The SC workﬂow: an interactive design session leads to a ﬁnal 2D pattern and corresponding 3D drape pose which is then realized from the pattern.

To reach interactive rates in SC required leveraging observations shared by many potential IDSI problems. Among these are (a) faster, more stable computation of equilibrium, at the expense of dynamics, for design of static structures; (b) synchronized editing and bidirectionality for a seamless design process; (c) sensitivity analysis for interactive exploration of nearby designs; and (d) adaptive enrichment of sensitivity information using GMLS to leverage users’ natural pauses and inclination to explore multiple design variants. We hope that insights such as these, originally garnered for SC, will prove portable to a broad range of domains, and that SC itself will serve as a motivating example spurring research into fusing design, simulation, and interaction for a broad range of exciting domains.

alized moving least squares interpolations. Computational Mechanics 24, 5, 334–347. BARAFF , D., AND W ITKIN , A. 1998. Large steps in cloth simulation. In SIGGRAPH ’98, ACM, 43–54. BARNES , M. 1988. Form-ﬁnding and analysis of prestressed nets and membranes. Computers & Structures 30, 3, 685–695. BATOZ , J.-L., BATHE , K.-J., AND H O , L.-W. 1980. A study of three-node triangular plate bending elements. Int’l Journal for Numerical Methods in Engineering 15, 12, 1771–1812. B ERGOU , M., WARDETZKY, M., H ARMON , D., Z ORIN , D., AND G RINSPUN , E. 2006. A Quadratic Bending Model for Inextensible Surfaces. In Fourth Eurographics Symposium on Geometry Processing, 227–230. B ITTNAR , Z., AND S EJNOHA , J. 1996. Numerical Methods in Structural Mechanics. American Society of Civil Engineers. B ONET, J., AND W OOD , R. D. 2008. Nonlinear Continuum Mechanics for Finite Element Analysis. Cambridge University Press. B ORNEMANN , F., AND D EUFLHARD , P. 1996. The cascadic multigrid method for elliptic problems. Numerische Mathematik 75, 2, 135–152. B REEN , D. E., H OUSE , D. H., AND W OZNY, M. J. 1994. Predicting the drape of woven cloth using interacting particles. In SIGGRAPH ’94, ACM, 365–372. B REITKOPF, P., NACEUR , H., R ASSINEUX , A., AND V ILLON , P. 2005. Moving least squares response surface approxima-

Acknowledgements
We would like to thank Charles Han for dress design, garment manufacture, and modeling; Susana Kim for dress modeling; and Brandon Arrington for SC testing, and papercraft design and manufacture. Nobuyuki Umetani was supported in part by the Funai Overseas Scholarship and the JSPS. Danny Kaufman and Eitan Grinspun were supported in part by the Sloan Foundation, the NSF (CAREER Award CCF-0643268, IIS-0916129), Adobe, ATI, Autodesk, Intel, mental images, Microsoft Research, NVIDIA, Side Effects Software, the Walt Disney Company, and Weta Digital.

References
ATLURI , S., C HO , J., AND K IM , H. 1999. Analysis of thin beams, using the meshless local Petrov–Galerkin method, with gener-

Figure 11: SC workﬂow: an overview of SC steps.

tion: formulation and metal forming applications. Computers & Structures 83, 17-18, 1411–1428. B RIDSON , R., M ARINO , S., AND F EDKIW, R. 2003. Simulation of clothing with folds and wrinkles. In ACM SIGGRAPH/Eurographics Symposium on Computer Animation, 28– 36. C HOI , K.-J., AND KO , H.-S. 2002. Stable but responsive cloth. ACM Trans. Graph. (SIGGRAPH 02) 21, 3, 604–611. DAZ 3D. http://www.daz3d.com/. D ECAUDIN , P., J ULIUS , D., W ITHER , J., B OISSIEUX , L., S HEF FER , A., AND C ANI , M. 2006. Virtual garments: A fully geometric approach for clothing design. Computer Graphics Forum 25, 3, 625–634. D ELINGETTE , H. 2008. Triangular springs for modeling nonlinear membranes. IEEE Transactions on Visualization and Computer Graphics 14, 2, 329–341. D EROUET-J OURDAN , A., B ERTAILS -D ESCOUBES , F., AND T HOLLOT, J. 2010. Stable inverse dynamic curves. ACM Trans. Graph. (SIGGRAPH Asia) 29, 137:1–137:10. D IGEST, R. 2002. New Complete Guide to Sewing (Readers Digest). Readers Digest, 10. E RLEBEN , K., S PORRING , J., H ENRIKSEN , D OHLMANN , H. 2005. Charles River Media. K.,
AND

¨ G RINSPUN , E., H IRANI , A., D ESBRUN , M., AND S CHR ODER , P. 2003. Discrete Shells. In ACM SIGGRAPH / Eurographics Symposium on Computer Animation, 62–67. H ASEGAWA , S., F UJII , N., KOIKE , Y., AND M AKOTO , S. 2003. Real-time rigid body simulation based on volumetric penalty method. In Proceedings of the 11th Symposium on Haptic Interfaces for Virtual Environment and Teleoperator Systems. H OPPE , H. 1996. Progressive meshes. In SIGGRAPH ’96, ACM, 99–108. I GARASHI , T., AND H UGHES , J. F. 2003. Clothing manipulation. ACM Trans. Graph. 22, 3, 697–697. I GARASHI , Y., I GARASHI , T., AND S UZUKI , H. 2009. Interactive cover design considering physical constraints. Computer Graphics Forum 28, 7, 1965–1973. JAMES , D., AND FATAHALIAN , K. 2003. Precomputing interactive dynamic deformable scenes. ACM Trans. on Graph. (SIGGRAPH 03) 22, 3, 879–887. K ECKEISEN , M., F EURER , M., AND WACKER , M. 2004. Tailor tools for interactive design of clothing in virtual environments. In Proceedings of the ACM symposium on Virtual reality software and technology, 182–185. K HOSRAVI , P., G ANESAN , R., AND S EDAGHATI , R. 2007. Corotational non-linear analysis of thin plates and shells using a new shell element. Int’l Journal for Numerical Methods in Engineering 69, 859–885. L IPMAN , Y., KOPF, J., C OHEN -O R , D., AND L EVIN , D. 2007. GPU-assisted positive mean value coordinates for mesh deformations. In Proceedings of the ﬁfth Eurographics Symposium on Geometry Processing, Eurographics, 117–123. M ALVERN , L. E. 1969. Introduction to the mechanics of a continuous medium. Prentice-Hall. M ARTIN , S., K AUFMANN , P., B OTSCH , M., G RINSPUN , E., AND G ROSS , M. 2010. Uniﬁed simulation of elastic rods, shells, and solids. ACM Trans. Graph. (SIGGRAPH 10) 29, 4, 1–10. ´ M C NAMARA , A., T REUILLE , A., P OPOVI C , Z., AND S TAM , J. 2004. Fluid control using the adjoint method. ACM Trans. Graph. (SIGGRAPH 04) 23, 3, 449–456. M EYER , M., D EBUNNE , G., D ESBRUN , M., AND BARR , A. H. 2001. Interactive animation of cloth-like objects in virtual reality. J. Vis. Comput. Animat. 12, 1 (2), 1–12.

F ENG , W.-W., Y U , Y., AND K IM , B.-U. 2010. A deformation transformer for real-time cloth animation. ACM Trans. Graph. (SIGGRAPH 10) 29, 4, 108:1–108:9. F LOATER , M. 2003. Mean value coordinates. Computer Aided Geometric Design 20, 1, 19–27. F RIES , T., AND M ATTHIES , H. 2003. Classiﬁcation and overview of meshfree methods. Tech Report., TU Braunschweig, Germany. F RISKEN , S. F., P ERRY, R. N., ROCKWOOD , A. P., AND J ONES , T. R. 2000. Adaptively sampled distance ﬁelds: a general representation of shape for computer graphics. In Proc. ACM SIGGRAPH 00, 249–254. G LEICHER , M., AND W ITKIN , A. 1991. Differential manipulation. In Graphics Interface, 61–67. G OLDENTHAL , R., H ARMON , D., FATTAL , R., B ERCOVIER , M., AND G RINSPUN , E. 2007. Efﬁcient simulation of inextensible cloth. ACM Trans. Graph. (SIGGRAPH 07) 26, 3.

M ORI , Y., AND I GARASHI , T. 2007. Plushie: An interactive pattern design for plush toys. ACM Trans. Graph. (SIGGRAPH 07) 23, 3. ¨ M ULLER , M. 2008. Hierarchical position based dynamics. Proc. of Virtual Reality Interactions and Physical Simulations. O PTI T EX. http://www.optitex.com/. ROHMER , D., P OPA , T., C ANI , M.-P., H AHMANN , S., AND S HEFFER , A. 2010. Animation wrinkling: augmenting coarse cloth simulations with realistic-looking wrinkles. ACM Trans. Graph. (SIGGRAPH Asia) 29, 6, 157:1–157:8. S AAD , Y. 2003. Iterative methods for sparse linear systems. SIAM, Philadelphia. S CHMIDT, R., G RIMM , C., AND W YVILL , B. 2006. Interactive decal compositing with discrete exponential maps. ACM Trans. Graph. (SIGGRAPH 06) 25, 3, 605–613. S HERMAN , L. 2006. The cult of couture. Forbes. S MITH , J., H ODGINS , J., O PPENHEIM , I., AND W ITKIN , A. 2002. Creating models of truss structures with optimization. ACM Trans. Graph. (SIGGRAPH 02) 21, 3, 295–301. T ERAN , J., S IFAKIS , E., I RVING , G., AND F EDKIW, R. 2005. Robust quasistatic ﬁnite elements and ﬂesh simulation. In ACM SIGGRAPH/Eurographics Symposium on Computer Animation, 181–190. T URQUIN , E., W ITHER , J., B OISSIEUX , L., C ANI , M.-P., AND H UGHES , J. 2007. A sketch-based interface for clothing virtual characters. IEEE Computer Graphics & Applications. VAN K EULEN , F., H AFTKA , R., AND K IM , N. 2005. Review of options for structural design sensitivity analysis. Part 1: Linear systems. Computer Methods in Applied Mechanics and Engineering 194, 30-33, 3213–3243. VOLINO , P., AND M AGNENAT-T HALMANN , N. 2007. Stop-andgo cloth draping. The Visual Computer 23, 9-11, 669–677. VOLINO , P., C ORDIER , F., AND M AGNENAT-T HALMANN , N. 2005. From early virtual garment simulation to interactive fashion design. Computer-Aided Design 37, 6, 593–608. VOLINO , P., M AGNENAT-T HALMANN , N., AND FAURE , F. 2009. A simple approach to nonlinear tensile stiffness for accurate cloth simulation. ACM Trans. Graph. (TOG) 28, 4, 1–16. WAGGONER , C., AND BARAFF , D. 2007. Virtual tailoring for Ratatouille: clothing the fattest man in the world. In ACM SIGGRAPH 2007 sketches. WANG , H., H ECHT, F., R AMAMOORTHI , R., AND O’B RIEN , J. F. 2010. Example-based wrinkle synthesis for clothing animation. ACM Trans. Graph. (SIGGRAPH 10) 29, 4, 107:1–107:8. YONGJOON L EE , S UNG -E UI YOON , S. O. D. K., AND C HOI , S. 2010. Multi-resolution cloth simulation. Computer Graphics Forum (Paciﬁc Graphics) 29, 7. Z HU , Y., S IFAKIS , E., T ERAN , J., AND B RANDT, A. 2009. An efﬁcient multigrid method for the simulation of high-resolution elastic solids. ACM Trans. Graph. (TOG) 28, 2, 16:1–16:18.

