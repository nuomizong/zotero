Eurographics Symposium on Geometry Processing 2010 Olga Sorkine and Bruno Lévy (Guest Editors)

Volume 29 (2010), Number 5

Designing Quad-dominant Meshes with Planar Faces
Mirko Zadravec1 , Alexander Schiftner2,3 , and Johannes Wallner1,2
1 Graz

University of Technology,

2 Vienna

University of Technology,

3

Evolute GmbH

Abstract We study the combined problem of approximating a surface by a quad mesh (or quad-dominant mesh) which on the one hand has planar faces, and which on the other hand is aesthetically pleasing and has evenly spaced vertices. This work is motivated by applications in freeform architecture and leads to a discussion of ﬁelds of conjugate directions in surfaces, their singularities and indices, their optimization and their interactive modeling. The actual meshing is performed by means of a level set method which is capable of handling combinatorial singularities, and which can deal with planarity, smoothness, and spacing issues. Categories and Subject Descriptors (according to ACM CCS): Computer Graphics [I.3.5]: Computational Geometry and Object Modeling—

1. Introduction. Among the basic problems in freeform architecture which pertain to geometry processing is the decomposition of a freeform shape into a quad-dominant mesh whose faces are planar (or as planar as required by the intended manner of realizing that quad mesh in building construction). The geometric properties of such PQ meshes and an optimization procedure to generate them has been investigated by Liu et al. [LPW∗ 06]. Pottmann et al. took this work further and discussed the multilayer constructions associated with such meshes [PLW∗ 07]. It turns out that except for trivial cases, triangle meshes do not support offsets at constant distance or indeed any multilayer structure of meshes where corresponding faces are parallel. This again conﬁrms the importance of quad meshes. PQ meshes which are the basis of an architectural design must exhibit properties different from the mere geometric constraint of planarity of faces. A typical constraint is that faces are not larger than available panels of a given material, for example glass. At the same time face sizes should not vary much or be very small either, since that would lead to practical difﬁculties when realizing such a mesh as a structure. It is therefore important to incorporate the equal spacing of vertices in our design procedure. Another issue is aesthetics, which we approach by, among others, the discrete bending energies of the polylines formed by the edges in a mesh. As already mentioned by [LPW∗ 06],
c 2010 The Author(s) Journal compilation c 2010 The Eurographics Association and Blackwell Publishing Ltd. Published by Blackwell Publishing, 9600 Garsington Road, Oxford OX4 2DQ, UK and 350 Main Street, Malden, MA 02148, USA.

(a)

(b)

δPQ,n = .051

(c)

δPQ,n = .011

Figure 1: Processing pipeline demonstrated for the outer hull of the Yas Island Marina Hotel, Abu Dhabi (Asymptote Architecture, originally a nonplanar quad mesh). (a) We start by optimizing a ﬁeld of conjugate directions. (b) A level set method yields a quad mesh aligned with this ﬁeld. (c) Optimization for planarity of faces. The color coding shows a normalized measure of planarity (normalized diagonal distance in quadrilateral faces; maximum value after optimization is δPQ,n = 0.011; red color is used for values ≥ 0.01).

M. Zadravec, A. Schiftner, J. Wallner / Designing Quad-dominant Meshes with Planar Faces

the segmentation of a freeform surface Φ into quadrilateral planar faces is a discrete version of a conjugate curve network in Φ: optimization of that mesh towards planarity in general succeeds if it follows a network of conjugate curves, and cannot be expected to succeed otherwise. A similar result is true for segmentation of a surface into single-curved strips [PSB∗ 08], which can be seen as a limit case of quadmeshing. Contribution of the present paper. The papers mentioned above do not discuss the question how to design a network of conjugate curves, except to describe the degrees of freedom in principle, and to emphasize that only such networks are useful for meshing whose curves intersect transversely. The most important example of a conjugate curve network is the network of principal curvature lines: here the intersection angle of curves is 90 degrees and the transversality condition is fulﬁlled. In this paper we take up the design of conjugate curve networks and treat the following topics: • The conjugacy relation between surface tangents, which is deﬁned by the curvatures of the surface; • an interpretation of the conjugacy relation in projective geometry terms which later allows us to encode a pair of conjugate directions by means of a single vector; • ﬁelds of conjugate directions, and theoretical results on the elimination of singularities of such ﬁelds; • a method based on level sets which converts direction ﬁelds into curve networks and subsequently into quad meshes or quad-dominant meshes. • optimizing meshes generated in this way towards the PQ property. This list of topics describes a processing pipeline for surfaces which we wish to represent as a PQ mesh. The last item is not a contribution of the present paper: we use a method similar to [LPW∗ 06] for that. Related Work. There are papers on quad meshing, and also on approximating a surface by a mesh with planar faces. For quad meshing in general we refer the reader to the literature cited in the introduction of [LPW∗ 06]. Recent work which can create near-planar faces is [BZK09], where a cross ﬁeld is aligned with dominant principal curvature lines, and subsequently a quad mesh is roughly aligned with the principal curvature lines by means of a continuous-discrete optimization problem. The examples given in that paper however make it clear that planarity of faces is not intended: the principal curvature directions are taken only as guidelines to achieve a good meshing. Exact planarity is achieved by [CAD04], but here smoothness is not an issue. These methods cannot be used for our purposes without modiﬁcation. In this paper singularities of direction ﬁelds play a prominent role; see [RVLL08, RVAL09] for directly related work. The present paper is different from previous ones on meshing because the constraint of planarity of faces is very rigid,

a w

b w

w

v v det M < 0 det M > 0

v det M = 0

Figure 2: The conjugacy relation vT M w = 0 and the conics xT M x = ±1 (Dupin indicatrices). If det M ≥ 0, only one of these conics is real. If det M < 0, then v, w are separated by self-conjugate vectors a, b which indicate the asymptotes.

and in our attempts at meshing a surface we have to exactly follow the features of that surface which are relevant to planarity. Many of these “second order” features would not be called features in other circumstances. It must be mentioned that there exist methods for generating PQ meshes which entirely circumvent the problem of surface analysis: In order to approximate a desired shape Φ by a dense PQ mesh we can ﬁrst approximate Φ by a coarse one, and subsequently apply several rounds of PQ optimization and subdivision in an alternating way [LPW∗ 06]. But even if optimization is done such that deviation from Φ is penalized, the second order features of the original shape Φ will be different from those of the mesh actually obtained (this is clear from the later section on invariance of singularities, for an illustration see Figure 11). 2. Conjugate Directions in Surfaces. This section introduces the notion of conjugacy of surface tangents which involves the surface’s second derivatives and is deﬁned as follows [dC76]: Any point p of a smooth surface Φ serves as the origin of a coordinate frame whose x3 axis is orthogonal to Φ. Φ can locally be described as the graph of a function x3 = f (x), with x = x1 , and which has x2 the 2nd order Taylor expansion 1 x3 = xT M x + . . . , where M = 2 ∂11 f ∂12 f ∂12 f ∂22 f .

It is well known that the principal curvatures κ1 , κ2 are the eigenvalues of M, and the principal directions correspond to the eigenvectors. The Gaussian curvature equals κ1 κ2 = K = det(M). If tangent vectors v, w are represented as elements of R2 , then vT Mw evaluates the second fundamental form for them. We deﬁne v, w are conjugate ⇐⇒ vT M w = 0. Obviously, if v and w are conjugate then so are any nonzero multiples of these vectors and we can speak of conjugate
c 2010 The Author(s) Journal compilation c 2010 The Eurographics Association and Blackwell Publishing Ltd.

M. Zadravec, A. Schiftner, J. Wallner / Designing Quad-dominant Meshes with Planar Faces

vi

vi zM c zM det M > 0 wi c

vi

c

wi

wi

zM

det M < 0

det M = 0

vector. Such a ﬁeld b exists if Φ has disk topology, which is the case for the applications we have in mind. The matrix M f describing the second fundamental form in f is found from its eigen-data (principal curvatures and principal directions), using the method of osculating jets [CP03]. We further compute the point zM, f according to Prop. 1. Remark: It is well known that principal directions are numerically unstable if curvatures are almost equal, but M f is stable in any case; zM, f is stable whenever M f = 0 0 . 00 3. Fields of transverse conjugate directions (TCD ﬁelds).

Figure 3: Illustrating Prop. 1 for vectors vi and corresponding conjugate vectors wi . If v rotates about the origin clockwise, then w rotates clockwise or counter-clockwise, depending on the sign of det M.

directions – a direction being the linear span of a tangent vector. The set of vectors conjugate to v is a 1-dimensional subspace except in the special case that det M = 0 and M v = 0. We can visualize the conjugacy relation by means of the Dupin indicatrices, which are conics with the implicit equation {x | xT M x = ±1} (see Figure 2). The following elementary fact is well known in projective geometry, where it belongs to ‘involutions on a conic’ [Cox92, § 7.5]. Consider the auxiliary circle
2 c : (x1 − 1)2 + x2 = 1

In our study of conjugate curve networks we encounter the problem of assigning, to each point p of a surface, a pair of conjugate directions. We could do this locally by assigning two vectors to each point which must obey the side condition of conjugacy, but globally this is usually not possible. Besides it is better for subsequent optimization tasks if we ﬁnd a representation which avoids side conditions altogether. Our way of choosing a conjugate pair of directions is based on the matrix M which stores curvature information and an auxiliary matrix N which expresses our choice. Actually we work with the corresponding points zM , zN instead of the matrices M, N. This approach is based on the following proposition: Prop. 2. If 2×2 matrices M, N are symmetric with det N > 0, then there are nonzero vectors v, w which fulﬁll vT M w = vT Nw = 0. They are eigenvectors of the matrix N −1 M. This is well known in linear alv gebra, but is also a consequence of Prop. 1: v, w are found by intersecto e 1 zN ing the line zM zN with the circle c. This intersection surely exists if zN w lies inside c. The line zM zN is well deﬁned also in case zM is at inﬁnity. zM If zM is already known, then we can store a pair of conjugate vectors v, w simply by storing zN . The transversality condition. With Prop. 2 we can choose a pair of conjugate directions by choosing the point zN . In our implementation, we have such a point zN, f for each face. We can thus view {zN, f } f ∈F as a vector ﬁeld. All future optimization problems regarding conjugate directions are converted into problems regarding the vector ﬁeld zN . One example of how properties of conjugate directions are expressed in terms of the vector ﬁeld zN is the relation cos (v, w) ≤ zN − e1 , (1)

and for each line [v] spanned by a vector v consider its intersection point [v] ∩ c. Here we abuse notation and do not count the trivial intersection point o = (0, 0), so [v] ∩ c is always a single point. Then the following is true: Prop. 1. Vectors v, w are conjugate, that is vT M w = 0 ⇐⇒ m 2 the points [v] ∩ c, [w] ∩ c and zM = m11 +m22 −m22 lie on a 12 common straight line. The point zM lies inside c, outside c, or on c if det M > 0, or det M < 0, or det M = 0, respectively. This is illustrated by Figure 3. The point zM may also escape to inﬁnity, in which case the formula above reads m zM = 1 −m22 . Apparently zM determines the matrix M up 0 12 to a scalar factor. Data structure for the conjugacy relation. The procedures described later in this paper require that we deal with curvatures and the conjugacy relation in all points of a surface Φ. This is implemented as follows: Φ is represented by a triangle mesh (V, E, F). We store the necessary curvature information in the faces, which are equipped with a local coordinate system. We use the method of [FSDH07] to ﬁnd a nonzero smooth “basis” vector ﬁeld b (by prescribing a value in a face and minimizing the Dirichlet energy). It is represented as a discrete 1-form and is evaluated for each face f ∈ F. By normalization we get the ﬁrst basis vector e1, f = b f / b f of f ’s local coordinate system. The second basis vector then equals e2, f = n f × e1, f , where n f is the positive unit normal
c 2010 The Author(s) Journal compilation c 2010 The Eurographics Association and Blackwell Publishing Ltd.

whose proof is elementary and follows from the fact that 2 (v, w) occurs in the vertex e1 of the triangle [w] ∩ c, e1 , [v] ∩ c. The meaning of this relation is that by restricting the point zN to a smaller disk we can ensure a minimum angle enclosed by vectors v, w. It follows immediately that zN = e1

M. Zadravec, A. Schiftner, J. Wallner / Designing Quad-dominant Meshes with Planar Faces

selects the unique orthogonal conjugate pair, i.e., the principal directions. We use the word transverse to indicate that two lines do not coincide, and the degree of transversality is measured by the angle between these lines. A ﬁeld of conjugate directions which are transverse everywhere is called a TCD ﬁeld. Singularities and indices of TCD ﬁelds. The discussion of singularities’ properties is relevant for the basic question whether there exist TCD ﬁelds without them. The number and location of singularities of a TCD ﬁeld is of course important if we later align a quad mesh with a TCD ﬁeld: Singularities of the ﬁeld will become combinatorial singularities of the mesh. We start with the deﬁnition of index, which is illustrated by Figure 4. Assume that D is a simply connected domain in a surface, and that we have a continuous assignment of directions to each point of the boundary loop ∂D. When traversing ∂D in the positive sense, the direction has a total rotation angle ρD . The index indD is then deﬁned by 1 ρD . (2) 2π This index is always an integer multiple of 1/2. A cross ﬁeld, which is an assignment of an orthogonal pair of directions to each point, likewise has an index (see Figure 4) which is an integer multiple of 1/4. For more details on indices of such ﬁelds the reader is referred to [RVLL08, RVAL09]. For a general ﬁeld of transverse directions (such as a TCD ﬁeld) we measure the index via its ﬁeld of angle bisectors which is a cross ﬁeld. indD =

Figure 5: ‘Flying carpet’ surface, Louvre, Paris. We illustrate the degrees of freedom which the conjugate direction ﬁelds enjoy. In the negatively curved areas (K < 0) we show the sectors where elements of such a TCD ﬁeld are conﬁned in. In areas where K approaches zero from below, one sector becomes thin and the corresponding member of a TCD ﬁeld has not much freedom to move. In the positively curved areas (K > 0), where TCD ﬁelds can rotate freely, we draw the major and minor principal direction as an example of a TCD ﬁeld. Singularities of index 1/2 and −1/2 are marked by small yellow resp. red balls.

For an illustration of a TCD ﬁeld and its indices, see Figure 5. It is well known that the index is well deﬁned and additive when dissecting a domain into pieces: indD = ∑p∈D indp . (3)

The ﬁeld of principal curvature directions does not exhibit arbitrary indices. Only multiples of 1/2 occur. This fact can be generalized: Prop. 3. A TCD ﬁeld constructed by means of an auxiliary vector ﬁeld zN as described above always is the union of two separate direction ﬁelds; consequently all indices are integer multiples of 1/2 (this especially applies to the principal direction ﬁeld which corresponds to zN = const. = o). Proof: Discontinuities of the ﬁeld occur for zM = zN , otherwise N −1 M is no multiple of the identity matrix and has two different real eigenvalues. Since det N > 0 we may w.l.o.g. 1 assume that N = n12 n12 . This makes N uniquely and conn22 tinuously dependent on the point zN . The directions which constitute the TCD ﬁeld are deﬁned by the eigenvectors of N −1 M and can therefore be distinguished by belonging to the greater and the smaller eigenvalue. Remark: Our way of handling ﬁelds of conjugate directions prohibits the indices ±1/4, ±3/4, . . . and so not all possible such ﬁelds are treated. Restriction to integer multiples of 1/2 however has the effect that the total number of singularities is reduced, which is a major goal anyway. On the invariance of indices. The main results of this subsection are negative in character: they say that in many situations singularities are entailed by the geometry of the surc 2010 The Author(s) Journal compilation c 2010 The Eurographics Association and Blackwell Publishing Ltd.

1

1 4

0

1 2

−1 2

Figure 4: The index of a ﬁeld of transverse directions. The ﬁeld is shown only along the boundary loop ∂D of the domain under consideration; inside D we show integral curves. We give the index indD which corresponds to a total rotation angle 2π indD .

Def. 1. The index indp of a TCD ﬁeld which is continuous around p (with the possible exception of p itself) is the index w.r.t. any small loop around that point. If it is nonzero, the ﬁeld has a singularity at p.

M. Zadravec, A. Schiftner, J. Wallner / Designing Quad-dominant Meshes with Planar Faces

(a)

(b)

δPQ,n = .052

(c)

δPQ,n = .012

Figure 6: Detail of the great court roof, British Museum, originally a triangle mesh design by Foster and Partners. (a) Design of a TCD ﬁeld. In areas of nonpositive curvature the possible directions are indicated by sectors. (b) One half of integral curves of this ﬁeld, found by means of our level set method. A quad mesh derived from these level sets is indicated by color coding the planarity measure δPQ,n . (c) mesh already optimized for planarity of faces.

face under consideration and cannot be removed. The ﬁrst result concerns areas of negative Gaussian curvature, where the movement of conjugate directions is constrained by the asymptotic directions (see Figure 5): Prop. 4. In areas with K < 0 all TCD ﬁelds have the same indices and location of singularities. Proof: If K < 0, conjugate directions [v], [w] are separated by the self-conjugate asymptotic directions [a], [b] (see Figure 2). Thus both [v], [w] can possibly move only in their own respective sector which is bounded by [a], [b]. It follows that for a loop inside the K < 0 area, the total rotation angle of the ﬁeld equals the total rotation angle of either [a] or [b], which is independent of the ﬁeld. Figure 2, right, and Figure 3, right imply that along the parabolic curves (which separate the positively curved areas from the negatively curve ones) there is even less freedom: Prop. 5. In all surface points where K = 0, one of two conjugate directions always equals the principal curvature direction corresponding to zero curvature. Prop. 6. In areas where K ≤ 0, all indices of TCD ﬁelds are integer multiples of 1/2 (regardless of their way of construction via zN or otherwise). Proof: Prop. 4 and Prop. 5 say that the indices of a TCD ﬁeld coincide with the indices of the principal direction ﬁeld. The statement now follows from Prop. 3. TCD ﬁelds have more freedom in the positively curved areas of a surface. It turns out, however, that the number of singularities present is in some cases bounded from below: Prop. 7. Assume that D is a connected component of the K > 0 area in the surface which does not touch the surface’s boundary and which has no ﬂat point with κ1 = κ2 = 0 on ∂D. Then the total index indD is the same for all TCD ﬁelds. Only if indD = 0 we may have a TCD ﬁeld without singularities in D. Proof: On ∂D one principal curvature vanishes. The corresponding principal curvature direction is part of any pair of conjugate directions (see Figure 2, right). It follows that the
c 2010 The Author(s) Journal compilation c 2010 The Eurographics Association and Blackwell Publishing Ltd.

total rotation angle of the TCD ﬁeld equals the angle of the principal ﬁeld. Remark: In our implementation all elements of a TCD ﬁeld (zM , zN , . . . ) are associated with the faces of a mesh. Deciding whether a face represents a singularity requires to compute the total rotation angle of the ﬁeld along a path around f , for which we use a 1-neighbourhood. Because of Prop. 3 each of the two directions v, w in the TCD ﬁeld must result in the same rotation angle. In fact we use a locally deﬁned auxiliary vector bisecting v, w for computing the rotation angle.

4. Design and optimization of TCD ﬁelds. The guiding principle behind the optimization of a ﬁeld of conjugate directions is that we represent this ﬁeld by a simple object, namely the vector ﬁeld zN . We express all desired properties of the TCD ﬁeld in terms of the vector ﬁeld. For the handling of vector ﬁelds we employ 1-forms as proposed by [FSDH07]. We set up a target functional whose minimization is to ensure desirable properties of a TCD ﬁeld, such as smoothness, transversality, absence of singularities in general, singularities in prescribed places, and prescribed values of the TCD ﬁeld in some places. Setup of global optimization. Smoothness of the TCD ﬁeld is measured by smallness of the Dirichlet energy of the vector ﬁeld zN which is is computed according to [FSDH07]. We take that energy as the base of a target functional for optimization. For transversality we penalize small angles between v and w which according to (1) can be done by adding λtrans ∑ f ∈F φ( zN, f − e1, f ), φ(t) = t 4

to the target functional, where φ can be any function which grows quickly as we approach 1. If in a face f we wish to place a singularity we can simply enforce zM, f = zN, f . In case that in a certain area we wish to discourage formation of singularities, we prevent zM = zN by adding to the target

M. Zadravec, A. Schiftner, J. Wallner / Designing Quad-dominant Meshes with Planar Faces

(a)

(b)

(c) Figure 7: Local corrections to the TCD ﬁeld shown in (a). (b) We move a singularity to a new desired position (shown by the location of the red ball). (c) Local deformation of ﬁeld to achieve desired direction of 1 conjugate direction (white). The green area indicates the extent of the sub-mesh involved.

functional the term

f ∈F

∑ λreg, f ψ(

zN, f − zM, f ),

ψ(t) =

(t − 1) , if t < 1, 0 else.

4

Figure 7a,b illustrates this procedure which is intended to be worked with interactively. Local optimization. We should point out that optimization can be localized by simply applying it to part of the mesh, using functions like (4) to blend a locally modiﬁed vector ﬁeld with the original one (see Figure 7c for an example). 5. Meshing via level sets. In order to set up a quad-dominant mesh whose edges are aligned with a TCD ﬁeld, it is very convenient to ﬁrst ﬁnd functions deﬁned on the surface Φ, whose level sets are aligned with that TCD ﬁeld. It is also possible to incorporate our wish for an even spacing of vertices into this level set formulation. It is not difﬁcult to set up this level set method in a simply connected area where the TCD ﬁeld is regular: at singularities some additional considerations will be necessary. A quad mesh whose edges are aligned with the level sets of functions g, h which are deﬁned in the given surface Φ is easily found by choosing values wi for the function g and w j for the function h, and placing a vertex vi j such that g(vi j ) = wi , h(vi j ) = w j .

Prop. 2 shows us how to encode, in terms of zN, f , the condition that the conjugate vectors v f , w f assume prescribed values: We must penalize deviation of zN, f from the straight line = ([v f ] ∩ c f ) ∨ ([w f ] ∩ c f ) (using the notation of the ﬁgure close to Prop. 2). If required, we add the square of this distance to the target functional. Implementation. Optimization is done by a nonlinear conjugate gradient method [NW99]. We used the FletcherReeves way of updating descent directions, but this choice is not critical. The necessary ﬁrst derivatives are computed numerically. To initialize optimization we ﬁrst reset to zero all coefﬁcients of the 1-form representing the vector ﬁeld zN , and next optimize for ∑ f ∈F zN, f − e1, f 2 → min. This achieves zN ≈ e1 (the corresponding TCD ﬁeld is as close to principal as possible). The vector ﬁeld zN constructed in this way is used as a starting point for minimizing the target functional assembled above. Local correction: Moving singularities. The moving of a singularity of a TCD ﬁeld from a current position f0 to a nearby new position f1 can be efﬁciently and interactively performed without resorting to global optimization. With the smooth function  if t ∈ [0, r1 ], 1 (4) σ(t) = 1 + 1 cos(π rt−r11 ) if t ∈ [r1 , r2 ], 2 −r 2 2 0 if t ∈ [r2 , ∞), we perform a smooth correction to the vector ﬁeld zN and replace it by znew = zN, f − β f (zN, f1 − zM, f1 ), N, f β f = σ(dist( f , f0 )). This computation is two-dimensional; in each face we use the appropriate local coordinate system. Assuming that the face f1 is close to f0 so that β f1 = 1, we then have znew1 N, f = zN, f1 − (zN, f1 − zM, f1 ) = zM, f1 . Because we have now achieved zM, f1 = znew1 , the singularity N, f of the TCD ﬁeld has moved to its desired new location f1 . where

It is natural to choose wi = i · ∆w, and w j = j · ∆w (i.e., equally spaced samples). It remains to choose the functions g and h. Optimization Setup. If we are given a conjugate direction ﬁeld without singularities, then we can globally represent this ﬁeld using two nonzero vector ﬁelds v, w. The unknown functions g, h are considered to be piecewise-linear on the mesh, so they are determined by their values in the vertices. Their gradient vector ﬁelds are piecewise-constant. In the following we assume that Φ is simply connected. We optimize the values of g such that

∑ f ∈F area( f )

R f v f − ( g) f

2

→ min,

(5)

where R f is the rotation about 90 degrees in the face f . A similar formula applies to the function h and the vector ﬁeld w. An exact solution of (5) which then has g = Rv exists if and only if the vector ﬁelds {R f v f } f ∈F and {R f w f } f ∈F are integrable. Only in this case will the level sets of g resp. h
c 2010 The Author(s) Journal compilation c 2010 The Eurographics Association and Blackwell Publishing Ltd.

M. Zadravec, A. Schiftner, J. Wallner / Designing Quad-dominant Meshes with Planar Faces

(a) δPQ,n = .113

(b) δPQ,n = .015

(c) δPQ,n = .015

(d)

Figure 8: Great court roof, British Museum, originally a triangle mesh design by Foster and Partners. The quad mesh in (a) is found by our level set method from the principal directions, which exhibit four singularities, each of index −1/2. Color coding shows the degree of planarity of each face. (b) optimization for the PQ property, and (c) optimization for the conical property [LPW∗ 06]. (d) shows the mesh of (c). The fact that all these meshes are pretty much the same proves that initializing the ﬁrst mesh from principal directions is near-optimal.

align exactly with the vector ﬁelds v, w. Note that the length of vectors v f , w f inﬂuences the integrability. We use these lengths on purpose, because they allow us to control the distance of successive level sets [g = wi ] and [g = wi+1 ]: this distance approximately equals (wi+1 − wi )/ g .

vector ﬁelds now exhibit jumps across cuts; and these jumps must be deﬁned in a way which makes level sets continuous. This is implemented as follows: A cut is represented as an edge polyline C in the triangle mesh. Consider ﬁrst a cut which emanates from a singularity of index ±1/2. Using the notation gleft (v) and gright (v) for the two function values of a vertex v ∈ C , we must have gleft (v) = αC − gright (v), where αC = iC · ∆w for all vertices v ∈ C and some integer iC . For the source vertex v0 , the two function values coincide, which implies g(v0 ) = αC /2. Further cuts may be necessary to make the surface simply connected (e.g. for the model of Figure 8). Here we have gleft (v) = αC + gright (v), where αC = iC · ∆w for all vertices v ∈ C and some integer iC . A similar equation applies to the function h and the step size ∆w . These conditions guarantee continuity of level sets across cuts. Remark: Higher order singularities of index ±k/2 can be seen as the limit of k singularities of index ±1/2, with k cuts emanating from the singularity which run parallel. Here we have the relation gleft (v) = αC + (−1)k gright (v), but the singular source vertex of the cut is, in theory, associated with k function values. Our examples have only k = 1. The optimization problems (5) and (6) are modiﬁed as follows: Vertices which take part in a cut have two function values related by the linear jump conditions given above. We introduce the constants αC as new variables and ﬁrst optimize without restricting the values which the constants αC can assume. In a subsequent step we are rounding the constants αC which belong to cuts emanating from a singularity to the nearest even integer multiple of the appropriate step sizes ∆w or ∆w in order to achieve an all-quad meshing where level sets pass through the singularities. If we round to the nearest odd integer multiple we get only vertex 4 vertices but extraordinary faces instead. We likewise round the constants αC associated with the remaining cuts. Now optimization is repeated, where all values achieved by rounding are kept constant.

Thus we can incorporate the very important property of equal spacing of vertices in our method by setting the vectors v f , w f to unit length. The minimization problem (5) only involves the gradient of g and thus determines g only up to a constant: we have to ﬁx one value of g. Implementation. Since Equ. (5) is quadratic, optimization amounts to solving a linear equation system for the values of g at the vertices. Below we encounter further functionals to minimize which are no longer quadratic (Equations (8), (7) and (6)). We employ Gauss-Newton for their optimization. All required ﬁrst order derivatives are computed exactly. The linear systems to be solved in each iteration step are sparse, because all contributions to the functionals are local. We can therefore employ sparse Cholesky factorization using C HOLMOD [CDHR08]. Remark: The fact that the length of vectors enters (5) may lead to a bad alignment of level sets with the given conjugate directions. If we do not care about equal spacing at all, we replace (5) by

f ∈F

∑

area( f ) v , area(Φ) f

gf gf

2

→ min .

(6)

We minimize this nonlinear functional by a Gauss-Newton Method, using a solution of (5) for initialization. Quad meshes from a TCD ﬁeld with singularities. In case the given TCD ﬁeld exhibits singularities, we can not globally represent it by two nonzero vector ﬁelds. This can be remedied conceptually by lifting the TCD ﬁeld to a suitable branched covering Φ of the given surface Φ, as described in [KNP07]. In our implementation this amounts to introducing cuts which run from singularities to the surface boundary. Functions g, h whose level sets are to be aligned with
c 2010 The Author(s) Journal compilation c 2010 The Eurographics Association and Blackwell Publishing Ltd.

M. Zadravec, A. Schiftner, J. Wallner / Designing Quad-dominant Meshes with Planar Faces

(a)

δPQ,n = .045

(b)

δPQ,n = .029

(c)

δPQ,n = .020

(d)

Figure 9: A design study for the courtyard roof of Neumünster monastery, originally a triangle mesh design by RFR which follows a surface exhibiting a slight tangent discontinuity. One family of mesh polylines consists of planar sections of the surface. We show optimization towards planarity with different side conditions. (a) before optimization. (b) optimization taking into account deviation from the reference surface and deviation of boundaries (c) optimizing without regard to boundary. (d) the mesh of (b) overlaid on the original surface.

Quad meshes without TCD ﬁelds. In special cases it is possible to prescribe one family of level sets explicitly. For instance, Figure 9 shows a shape Φ covering a rectangular courtyard where we prescribe that the level sets of g are planar sections of Φ. We could also formulate this condition in terms of TCD ﬁelds (by requiring that one of the two conjugate directions is parallel to a ﬁxed plane), but here we can avoid TCD ﬁelds entirely. We consider the function g as given, and compute the function h as a minimizer of the following functional, such that the level sets of g, h have conjugate tangents:

the boundary curve ∂Φ in the point p. We deﬁne as follows: fPQ = ∑ f ∈F (diag f )2 ,
∂ fprox = ∑v∈V v − Tπ(v)
∂

fprox = ∑v∈V \V v − τπ(v)
∂

2

,

2

.

Further, we measure fairness by comparing second differences “∆2 ” of every triple u, v, w of consecutive vertices uvw with the respective original value before optimization: ffair =

∑
triples (uvw)

∆2 − ∆uvw uvw

2,orig 2

.

f ∈F

∑

area( f ) area(Φ)

R

g g

T f

·Mf · R

h h

2 f

.

(7)

Here we have abused notation and assumed that all involved vectors are represented in the local coordinate frame associated with the face f which was discussed in Section 2. We augment this target functional by λeven area(Φ) ∑ f ∈F ( h) f 2 in order to achieve equal spacing of level sets. The latter functional is quadratic and minimizers are easily found if the values of h at two selected vertices are ﬁxed. We use such a minimizer to initialize minimization of (7). 6. Optimization of quad meshes for planarity. The quad-dominant meshes which are the result of the procedures described above are subject to further optimization in order to make their faces planar. Since we took the available curvature information into account when we created those meshes in the ﬁrst place, we are already close to exact planarity. For this optimization we set up the functional
∂ fPQ + λfair ffair + λprox fprox + λ∂ fprox . prox

Details of optimization of (8) are summarized by Figure 10. The computation time refers to a dual core 2.4GHz MacBook Pro. The quality of results is indicated by the proximity measures δprox = max
v∈V \V∂

v − τπ(v) ,

δ∂ = max v − Tπ(v) , prox
v∈V∂

the planarity measure δPQ = max f ∈F diag f , and the normalized planarity measure δPQ,n , which is the maximum of diag f divided by the mean length of diagonals in the face f . Model Figure 1 Figure 6 Figure 8 Figure 9 # Var. # Iter. sec δPQ δPQ,n δprox δ∂ prox 5373 1302 3462 1539 32 16 39 13 18.1 3.0 15.1 2.7 .0003 .0007 .0003 .0013 .011 .012 .01 .029 .0003 .0003 .0003 .0004 .0003 .0008 .0001 .0006

Figure 10: Details of PQ optimization. Bounding box diameter of all objects equals 1.

(8)

7. Discussion and limitations. Testing our methods on datasets which originate in realworld freeform architectural designs such as demonstrated by the ﬁgures in this paper showed satisfactory results. One can see that optimization towards planarity reduces the normalized planarity measure δPQ,n only by a factor ﬁve or so,
c 2010 The Author(s) Journal compilation c 2010 The Eurographics Association and Blackwell Publishing Ltd.

The deﬁnition of the single contributions to (8) uses the notation diag f for the distance between diagonals of the quadrilateral face f , V∂ for the set of boundary vertices, π and π for the closest-point projections onto Φ and ∂Φ, respectively; τ p for the tangent plane in p, and ﬁnally Tp for the tangent of

M. Zadravec, A. Schiftner, J. Wallner / Designing Quad-dominant Meshes with Planar Faces

and near-spherical parts, mesh combinatorics is irrelevant for planarity. Acknowledgments The research leading to these results has received funding from the European Community’s Seventh Framework Programme under grant agreement No. 230520 (“ARC”), and grant No. 813391 of the Austrian research promotion agency (FFG). We want to express our thanks to Waagner Biro Stahlbau (Vienna) and RFR (Paris) for datasets of architectural designs. References
[BZK09] B OMMES D., Z IMMER H., KOBBELT L.: Mixed-integer quadrangulation. ACM Trans. Graphics 28, 3 (2009), # 77, 1–10. 2 [CAD04] C OHEN - S TEINER D., A LLIEZ P., D ESBRUN M.: Variational shape approximation. ACM Trans. Graphics 23, 3 (2004), 905–914. 2 [CDHR08] C HEN Y., DAVIS T. A., H AGER W. W., R AJA S.: Algorithm 887: C HOLMOD, supernodal sparse Cholesky factorization and update/downdate. ACM Trans. Math. Softw. 35, 3 (2008), # 22, 1–14. 7
MANICKAM

Figure 11: Quad meshing the Opus project by Zaha Hadid architects using subdivision and PQ optimization. This works better than our analytic method because of large almost-ﬂat areas where conjugacy is numerically unstable and misleading (image from the survey paper [PSW08]).

conﬁrming that alignment of mesh and TCD ﬁeld is a good initialization for the ﬁnal round of optimization. We should mention that the many changes between positive and negative curvature in shapes like Figure 5 forces PQ meshes to basically follow the principal curvature lines with almost no degrees of freedom left to achieve even spacing of vertices. This is not a a limitation of the method, but a limitation of the design. In fact the analytic method of the present paper is useful to detect such features of a design. There are instances where our method is not optimal: for an example and a reason see Figure 11. An even simpler example where our method fails completely is a cube which is made smooth by rounding edges and corners. This is due to the lack of principal directions in most of this surface. Perhaps the most severe restriction of our method is that we handle only TCD ﬁelds whose indices are integer multiples of 1/2. In the positively curved areas of a surface there exist other TCD ﬁelds whose indices are only integer multiples of 1/4. Especially when meshing convex corners, ﬁelds with index 1/4 are natural, and we again identify the rounded cube as a failure case of our method. However, the paper’s method is not meant for such situations. It is meant to deal with the so-called “second order” features in surfaces which appear smooth and rounded to the eye, without the eye being able to detect the obstructions to meshing with planar quads. With the absence of ﬁrst order features such as present in a rounded cube, the need for singularities with index 1/4 disappears and the goal of as few singularities as possible dominates. It is possible to combine different methods in a pragmatic way, for instance by using the paper’s method to ﬁnd a mesh for those parts of a surface where principal curvature information exists, and using this information to redo meshing by the subdivision approach – knowing already where to put extraordinary vertices, and knowing that in the ﬂat
c 2010 The Author(s) Journal compilation c 2010 The Eurographics Association and Blackwell Publishing Ltd.

[Cox92] C OXETER H. S. M.: The real projective plane, 3rd ed. Springer, 1992. 3 [CP03] C AZALS F., P OUGET M.: Estimating differential quantities using polynomial ﬁtting of osculating jets. In Symp. Geometry processing (2003), Kobbelt L., Schröder P., Hoppe H., (Eds.), Eurographics, pp. 177–178. 3 [dC76] DO C ARMO M.: Differential Geometry of Curves and Surfaces. Prentice-Hall, 1976. 2 [FSDH07] F ISHER M., S CHRÖDER P., D ESBRUN M., H OPPE H.: Design of tangent vector ﬁelds. ACM Trans. Graphics 26, 3 (2007), # 56, 1–10. 3, 5 [KNP07] K ÄLBERER F., N IESER M., P OLTHIER K.: QuadCover – surface parameterization using branched coverings. Comput. Graph. Forum 26, 3 (2007), 375–384. 7 [LPW∗ 06] L IU Y., P OTTMANN H., WALLNER J., YANG Y. - L., WANG W.: Geometric modeling with conical meshes and developable surfaces. ACM Trans. Graphics 25, 3 (2006), 681–689. 1, 2, 7 [NW99] N OCEDAL J., W RIGHT S. J.: Numerical Optimization. Springer, 1999. 6 [PLW∗ 07] P OTTMANN H., L IU Y., WALLNER J., B OBENKO A., WANG W.: Geometry of multi-layer freeform structures for architecture. ACM Trans. Graphics 26, 3 (2007), # 65, 1–11. 1 [PSB∗ 08] P OTTMANN H., S CHIFTNER A., B O P., S CHMIED H., WANG W., BALDASSINI N., WALLNER J.: Freeform surfaces from single curved panels. ACM Trans. Graphics 27, 3 (2008), # 76, 1–10. 2
HOFER

[PSW08] P OTTMANN H., S CHIFTNER A., WALLNER J.: Geometry of architectural freeform structures. Int. Math. Nachr. 209 (2008), 15–28. 9 [RVAL09] R AY N., VALLET B., A LONSO L., L ÉVY B.: Geometry-aware direction ﬁeld processing. ACM Trans. Graphics 28, 1 (2009), # 1, 1–13. 2, 4 [RVLL08] R AY N., VALLET B., L I W. C., L ÉVY B.: N-symmetry direction ﬁeld design. ACM Trans. Graphics 27, 2 (2008), # 10, 1–13. 2, 4

